{"version":3,"sources":["components/Home/home.js","actions/index.js","containers/Users/users_container.js","components/UsersView/users.js","containers/User/user_container.js","components/FourOFour/fourofour.js","containers/Admin/add.js","containers/Admin/edit.js","components/SideNavItems/sidenavitems.js","components/Sidenav/sidenav.js","components/Header/header.js","hoc/Layout/layout.js","routes.js","reducers/users_reducer.js","reducers/index.js","reducers/mail_reducer.js","index.js"],"names":["Home","className","mailSendError","error","type","payload","sendMailWithData","id","dispatch","axios","post","then","response","data","alert","reset","mailSendSuccess","catch","err","addUser","success","clearUser","getUser","get","getUsers","limit","start","order","list","updateUser","doc","updateUserSuccess","deleteUserResponse","deleteUser","delete","users_container","props","sendMail","showUsers","users","map","item","key","_id","first_name","last_name","designation","to","onClick","this","nextProps","user","Component","connect","state","console","log","Users","UserContainer","makeStyles","card","maxWidth","media","height","renderTemplate","Grid","container","direction","justify","alignItems","xs","sm","md","lg","Card","CardActionArea","CardContent","Typography","gutterBottom","variant","component","color","description","age","email","mobile","CardActions","Button","size","match","params","FourOFour","AddUser","handleFileChange","event","target","files","setState","imageUrl","URL","createObjectURL","show","file","bookImage","bookName","name","renderFileInputField","field","input","value","length","fileInputKey","Date","meta","touched","myLabel","onChange","handleSelectChange","children","values","isSubmited","onSubmit","handleSubmit","method","Field","renderInputField","renderInputEmailField","renderNumberInputField","renderTextareaField","user_value","mail","initialValues","reduxForm","validate","errors","form","enableReinitialize","Edit","Object","entries","onHideNav","items","icon","text","link","restricted","i","element","Nav","showNav","navStyle","background","Header","style","padding","cursor","Layout","Routes","path","exact","EditUser","rootReducer","combineReducers","action","formReducer","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","reducers","document","getElementById"],"mappings":"2SAcmBA,G,OARF,WACT,OACI,yBAAKC,UAAU,WAAf,4B,yECWZ,SAASC,EAAcC,GAEtB,MAAO,CACNC,KAAM,YACNC,QAASF,GAKJ,IAAMG,EAAmB,SAACC,GAAD,OAAQ,SAACC,GAErBC,IAAMC,KAAN,2BAA+BH,IAC9CI,KAAK,SAAAC,GAUF,OARGA,EAASC,KAAKH,MACbI,MAAM,4BACNN,EAASO,YAAM,aACfP,EAxBZ,SAAyBI,GACrB,MAAM,CACFR,KAAO,YACPC,QAAUO,GAqBGI,CAAgBJ,EAASC,SAElCL,EAASN,EAAcU,EAASC,OAChCC,MAAM,qDAEHF,EAASC,OAEnBI,MAAM,SAACC,GACHV,EAASN,EAAcgB,IACvBJ,MAAM,wDAkCR,IAAMK,EAAU,SAACN,GAAD,OAAU,SAACL,GAE9BA,EAxBI,CACNJ,KAAM,iBACNC,QAAS,UAwBUI,IAAMC,KAAK,YAAYG,GACvCF,KAAK,SAAAC,GAECA,EAASC,KAAKO,SACbN,MAAM,+BACNN,EAASO,YAAM,gBACfP,EAxBJ,CACNJ,KAAM,mBACNC,QAAS,WAwBCG,EAlBJ,CACNJ,KAAM,iBACNC,QAAS,UAiBCS,MAAM,gCAGbG,MAAM,SAACd,GACJK,EAvBA,CACNJ,KAAM,iBACNC,QAAS,UAsBHS,MAAM,iCASP,SAASO,IACZ,MAAM,CACFjB,KAAO,aACPC,QAAU,IAYX,SAASiB,EAAQf,GAGhB,MAAM,CACFH,KAAO,WACPC,QAJQI,IAAMc,IAAN,0BAA6BhB,IAC5BI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,QAQxC,SAASW,IAMd,IALEC,EAKH,uDALW,GACRC,EAIH,uDAJW,EACRC,EAGH,uDAHW,MACRC,EAEH,uDAFU,GAaP,MAAM,CACFxB,KAAO,YACPC,QAZYI,IAAMc,IAAN,8BAAiCE,EAAjC,iBAA+CC,EAA/C,kBAA8DC,IAC7DhB,KAAM,SAAAC,GACH,OAAGgB,EACO,GAAN,mBAAWA,GAAX,YAAmBhB,EAASC,OAErBD,EAASC,QAyCrC,IAAMgB,EAAa,SAAChB,GAAD,OAAU,SAACL,GAGjBC,IAAMC,KAAN,mBAA8BG,GAC7BF,KAAK,SAAAC,GAECA,EAASC,KAAKO,SACbN,MAAM,8BACNN,EA1B5B,SAA2BI,GAE1B,MAAO,CACNR,KAAM,sBACNC,QAASO,EAASkB,KAsBiBC,CAAkBnB,EAASC,SAEpCL,EAlBpB,CACNJ,KAAM,oBACNC,QAgBmDO,EAASC,KAhB7CiB,MAiBWhB,MAAM,iCAGbG,MAAM,SAACd,GACJW,MAAM,kCAU9B,SAASkB,EAAmBpB,GAC3B,MAAO,CACNR,KAAM,cACNC,QAASO,GAKJ,IAAMqB,EAAa,SAAC1B,GAAD,OAAQ,SAACC,GAEZC,IAAMyB,OAAN,8BAAoC3B,IAC9BI,KAAK,SAAAC,GAECA,EAASC,MACRC,MAAM,8BACNN,EAASwB,EAAmBpB,EAASC,SAErCL,EAASwB,EAAmBpB,EAASC,OACrCC,MAAM,iCAGbG,MAAM,SAACd,GACJW,MAAM,kCC7N7BqB,G,kNAONF,WAAa,SAAC1B,GACT,EAAK6B,MAAM5B,SAASyB,EAAW1B,K,EAEnC8B,SAAW,SAAC9B,GACRO,MAAMP,GACN,EAAK6B,MAAM5B,SAASF,EAAiBC,K,EAS1C+B,UAAY,SAACzB,GAAD,OACRA,EAAK0B,MACD1B,EAAK0B,MAAMC,IAAI,SAAAC,GAAI,OACf,wBAAIC,IAAKD,EAAKE,KACV,4BACGF,EAAKG,WAAa,IAAMH,EAAKI,WAEhC,4BAAKJ,EAAKK,aAEV,4BAAI,kBAAC,IAAD,CAAMC,GAAE,iBAAYN,EAAKE,IAAjB,UAAR,MACJ,4BAAI,kBAAC,IAAD,CAAMI,GAAE,iBAAYN,EAAKE,MAAzB,MACJ,wBAAIK,QAAS,kBAAM,EAAKf,WAAL,UAAmBQ,EAAKE,QAA3C,KACA,wBAAIK,QAAS,kBAAM,EAAKX,SAAL,UAAiBI,EAAKE,QAAzC,QAGV,M,oFAhCFM,KAAKb,MAAM5B,SAASgB,EAAS,EAAE,EAAE,W,gDAUV0B,GAEnBA,EAAUrC,KAAKsC,MACdF,KAAKb,MAAM5B,SAASgB,EAAS,EAAE,EAAE,W,+BAsBlC,IAAIX,EAAOoC,KAAKb,MAAMvB,KAGtB,OACI,yBAAKZ,UAAU,cACf,sCACG,+BACI,+BACI,4BACI,oCACA,2CACA,oCACA,oCACA,sCACA,sCAGR,+BACKgD,KAAKX,UAAUzB,U,GAzDTuC,cA0EfC,kBARf,SAAyBC,GAErB,OADDC,QAAQC,IAAIF,GACL,CACFzC,KAAOyC,EAAMf,QAKNc,CAAyBlB,GCzE5BsB,EARD,WACV,OACI,6BACI,kBAAC,EAAD,Q,wECuBNC,G,OAVYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,O,2MAgBRC,eAAiB,SAACnD,GAAD,OACbA,EACA,kBAACoD,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,UAEP,kBAACJ,EAAA,EAAD,CAAMxB,MAAI,EAAC6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC7B,kBAACC,EAAA,EAAD,CAAMzE,UAAU,QAChB,kBAAC0E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC3CnE,EAAK+B,WAAa,IAAM/B,EAAKgC,WAElC,kBAACgC,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,cAAcD,UAAU,MAA1D,gBACiBnE,EAAKiC,aAEtB,kBAAC+B,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,cAAcD,UAAU,MAA1D,gBACiBnE,EAAKqE,aAEtB,kBAACL,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,cAAcD,UAAU,MAA1D,QACQnE,EAAKsE,KAEb,kBAACN,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,cAAcD,UAAU,MAA1D,UACWnE,EAAKuE,OAEhB,kBAACP,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,cAAcD,UAAU,MAA1D,WACYnE,EAAKwE,UAKrB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQP,MAAM,WAA3B,SAGA,kBAAC,IAAD,CAAMlC,GAAG,UACL,kBAACwC,EAAA,EAAD,CAAQC,KAAK,QAAQP,MAAM,WAA3B,aAQlB,M,sFArDNhC,KAAKb,MAAM5B,SH0ET,CACFJ,KAAO,aACPC,QAAU,O,2CGxEV4C,KAAKb,MAAM5B,SAASc,EAAQ2B,KAAKb,MAAMqD,MAAMC,OAAOnF,O,+BAqDxD,IAAMM,EAAOoC,KAAKb,MAAMvB,KACxB,OACI,6BACKoC,KAAKe,eAAenD,Q,GAhELuC,cAkFbC,kBARf,SAAyBC,GAErB,OADAC,QAAQC,IAAIF,GACL,CACHzC,KAAMyC,EAAMf,MAAMY,OAKXE,CAAyBK,GCvGzBiC,EANG,WACd,OACI,2C,kBCOFC,E,2MA8CNC,iBAAmB,SAACC,GAChBvC,QAAQC,IAAIsC,EAAMC,OAAOC,MAAM,IAC3BF,EAAMC,OAAOC,OAASF,EAAMC,OAAOC,MAAM,IACzC,EAAKC,SAAS,CACZC,SAAWC,IAAIC,gBAAgBN,EAAMC,OAAOC,MAAM,IAClDK,MAAO,IAKTP,EAAMC,OAAOO,MACb,EAAKL,SAAS,CACVM,UAAYT,EAAMC,OAAOC,MAAM,GAC/BQ,SAAWV,EAAMC,OAAOC,MAAM,GAAGS,Q,EAQ7CC,qBAAuB,SAACC,GACjBA,EAAMC,MAAMC,OACXtD,QAAQC,IAAImD,EAAMC,MAAMC,MAAMC,QAElC,IAAMC,EAAeJ,EAAMC,MAAMC,MAAQ,EAAKvD,MAAMkD,UAAY,IAAIQ,KACpEzD,QAAQC,IAAIuD,GACZ,IAAM9G,EAAS,qBAAiB0G,EAAMM,KAAKC,SAAWP,EAAMM,KAAK9G,MAAQ,YAAY,IAGrF,OACI,yBAAKF,UAAWA,GACZ,+BAAQ0G,EAAMQ,SACd,2BACAzE,IAAKqE,EACL3G,KAAK,OACLgH,SAAYT,EAAMC,MAAMQ,WAExB,yBAAKnH,UAAU,SACV0G,EAAMM,KAAKC,QAAUP,EAAMM,KAAK9G,MAAM,M,EA0CnDkH,mBAAqB,SAACvB,GAClBvC,QAAQC,IAAIsC,EAAMC,OAAOc,Q,gFAjHZF,GAEb,IAAM1G,EAAS,qBAAiB0G,EAAMM,KAAKC,SAAWP,EAAMM,KAAK9G,MAAQ,YAAY,IACrF,OACI,yBAAKF,UAAWA,GACZ,+BAAQ0G,EAAMQ,SACd,yCAAO/G,KAAK,QAAWuG,EAAMC,MAA7B,CAAsCQ,SAAYT,EAAMC,MAAMQ,YAC9D,yBAAKnH,UAAU,SACV0G,EAAMM,KAAKC,QAASP,EAAMM,KAAK9G,MAAM,O,4CAOhCwG,GAEjB,IAAM1G,EAAS,qBAAiB0G,EAAMM,KAAKC,SAAWP,EAAMM,KAAK9G,MAAQ,YAAY,IACrF,OACI,yBAAKF,UAAWA,GACZ,+BAAQ0G,EAAMQ,SACd,yCAAO/G,KAAK,SAAYuG,EAAMC,MAA9B,CAAuCQ,SAAYT,EAAMC,MAAMQ,YAC/D,yBAAKnH,UAAU,SACV0G,EAAMM,KAAKC,QAASP,EAAMM,KAAK9G,MAAM,O,0CAqDnCwG,GAChB,IAAM1G,EAAS,qBAAiB0G,EAAMM,KAAKC,SAAWP,EAAMM,KAAK9G,MAAQ,YAAY,IACrF,OACI,yBAAKF,UAAWA,GACZ,+BAAQ0G,EAAMQ,SACd,6BACQR,EAAMC,OAEb,yBAAK3G,UAAU,SACX0G,EAAMM,KAAKC,QAAUP,EAAMM,KAAK9G,MAAM,O,6CAOhCwG,GACnB,IAAM1G,EAAS,qBAAiB0G,EAAMM,KAAKC,SAAWP,EAAMM,KAAK9G,MAAQ,YAAY,IACrF,OACI,yBAAKF,UAAWA,GACZ,+BAAQ0G,EAAMQ,SACd,yCACA/G,KAAK,UACDuG,EAAMC,MAFV,CAGAQ,SAAYT,EAAMC,MAAMQ,YAEvB,yBAAKnH,UAAU,SACX0G,EAAMM,KAAKC,QAAUP,EAAMM,KAAK9G,MAAM,O,wCAarCwG,GACd,IAAM1G,EAAS,qBAAiB0G,EAAMM,KAAKC,SAAWP,EAAMM,KAAK9G,MAAQ,YAAY,IACrF,OACI,yBAAKF,UAAWA,GACZ,+BAAQ0G,EAAMQ,SAGf,4CAAaR,EAAMC,MAAnB,CAA4BQ,SAAYT,EAAMC,MAAMQ,WAC9CT,EAAMW,UAGV,yBAAKrH,UAAU,SACX0G,EAAMM,KAAKC,QAAUP,EAAMM,KAAK9G,MAAM,O,+BAc9CoH,GACHhE,QAAQC,IAAI+D,GACZtE,KAAKb,MAAM5B,SAASW,EAAQoG,IAC7BtE,KAAKgD,SAAS,CACVuB,YAAa,M,6CAOlBvE,KAAKb,MAAM5B,SLxET,CACFJ,KAAO,aACPC,QAAU,O,2CK2EV4C,KAAKb,MAAM5B,SL7ET,CACFJ,KAAO,aACPC,QAAU,O,2IKwFV,OAAO,I,gDAGe6C,M,+BAMjB,IAAD,OAIJ,OACI,6BAEA,yBAAKjD,UAAU,OACX,4CACA,kBAAC,IAAD,CAAM8C,GAAG,KAAT,SAGJ,kBAACkB,EAAA,EAAD,CACAC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,UAEP,kBAACJ,EAAA,EAAD,CAAMxB,MAAI,EAAC6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC,yBAAKxE,UAAU,QACX,0BAAMwH,SAAUxE,KAAKb,MAAMsF,aAAa,SAAC5B,GAAD,OAAS,EAAK2B,SAAS3B,KAAS6B,OAAO,QAE3E,kBAACC,EAAA,EAAD,CACIT,QAAQ,mBACRV,KAAK,aACLzB,UAAW/B,KAAK4E,mBAGpB,kBAACD,EAAA,EAAD,CACIT,QAAQ,kBACRV,KAAK,YACLzB,UAAW/B,KAAK4E,mBAGpB,kBAACD,EAAA,EAAD,CACIT,QAAQ,cACRV,KAAK,QACLzB,UAAW/B,KAAK6E,wBAGpB,kBAACF,EAAA,EAAD,CACIT,QAAQ,eACRV,KAAK,SACLzB,UAAW/B,KAAK8E,yBAGpB,kBAACH,EAAA,EAAD,CACIT,QAAQ,oBACRV,KAAK,cACLzB,UAAW/B,KAAK4E,mBAGpB,kBAACD,EAAA,EAAD,CACIT,QAAQ,YACRV,KAAK,MACLzB,UAAW/B,KAAK8E,yBAGpB,kBAACH,EAAA,EAAD,CACIT,QAAQ,oBACRV,KAAK,cACLzB,UAAW/B,KAAK+E,sBAIpB,4BAAQ5H,KAAK,UAAb,mB,GApQNgD,aA2UNC,kBAtBhB,SAAyBC,GAGrB,IAAI2E,EAWJ,OAVAA,EAAc,CACVrF,WAAa,GACbC,UAAY,GACZuC,MAAQ,GACRC,OAAS,GACTH,YAAc,GACdpC,YAAc,GACdqC,IAAM,IAGH,CACHtE,KAAMyC,EAAM4E,KACZC,cAAgBF,IAMkB,CAAC9G,UAAQE,aAAnCgC,CACZ+E,YAAU,CACNC,SA5DR,SAAkBd,GAEd,IAAMe,EAAS,GA8Bf,OA5BIf,EAAO3E,aACP0F,EAAO1F,WAAa,2BAGpB2E,EAAO1E,YACPyF,EAAOzF,UAAY,0BAGnB0E,EAAOnC,QACPkD,EAAOlD,MAAQ,sBAGfmC,EAAOlC,SACPiD,EAAOjD,OAAS,uBAGhBkC,EAAOzE,cACPwF,EAAOxF,YAAc,4BAGrByE,EAAOpC,MACPmD,EAAOnD,IAAM,oBAGboC,EAAOrC,cACPoD,EAAOpD,YAAc,4BAGlBoD,GA6BHC,KAAM,cACNC,oBAAqB,GAHzBJ,CAIGxC,IChVD6C,E,2MAiIFpB,mBAAqB,SAACvB,K,gFAjHLa,GAEb,IAAM1G,EAAS,qBAAiB0G,EAAMM,KAAKC,SAAWP,EAAMM,KAAK9G,MAAQ,YAAY,IACrF,OACI,yBAAKF,UAAWA,GACZ,+BAAQ0G,EAAMQ,SACd,yCAAO/G,KAAK,QAAWuG,EAAMC,MAA7B,CAAsCQ,SAAYT,EAAMC,MAAMQ,YAC9D,yBAAKnH,UAAU,SACV0G,EAAMM,KAAKC,QAASP,EAAMM,KAAK9G,MAAM,O,4CAOhCwG,GAEjB,IAAM1G,EAAS,qBAAiB0G,EAAMM,KAAKC,SAAWP,EAAMM,KAAK9G,MAAQ,YAAY,IACrF,OACI,yBAAKF,UAAWA,GACZ,+BAAQ0G,EAAMQ,SACd,yCAAO/G,KAAK,SAAYuG,EAAMC,MAA9B,CAAuCQ,SAAYT,EAAMC,MAAMQ,YAC/D,yBAAKnH,UAAU,SACV0G,EAAMM,KAAKC,QAASP,EAAMM,KAAK9G,MAAM,O,0CAsDnCwG,GAChB,IAAM1G,EAAS,qBAAiB0G,EAAMM,KAAKC,SAAWP,EAAMM,KAAK9G,MAAQ,YAAY,IACrF,OACI,yBAAKF,UAAWA,GACZ,+BAAQ0G,EAAMQ,SACd,6BACQR,EAAMC,OAEb,yBAAK3G,UAAU,SACX0G,EAAMM,KAAKC,QAAUP,EAAMM,KAAK9G,MAAM,O,6CAOhCwG,GACnB,IAAM1G,EAAS,qBAAiB0G,EAAMM,KAAKC,SAAWP,EAAMM,KAAK9G,MAAQ,YAAY,IACrF,OACI,yBAAKF,UAAWA,GACZ,+BAAQ0G,EAAMQ,SACd,yCACA/G,KAAK,UACDuG,EAAMC,MAFV,CAGAQ,SAAYT,EAAMC,MAAMQ,YAEvB,yBAAKnH,UAAU,SACX0G,EAAMM,KAAKC,QAAUP,EAAMM,KAAK9G,MAAM,O,wCAarCwG,GACd,IAAM1G,EAAS,qBAAiB0G,EAAMM,KAAKC,SAAWP,EAAMM,KAAK9G,MAAQ,YAAY,IACrF,OACI,yBAAKF,UAAWA,GACZ,+BAAQ0G,EAAMQ,SAGf,4CAAaR,EAAMC,MAAnB,CAA4BQ,SAAYT,EAAMC,MAAMQ,WAC9CT,EAAMW,UAGV,yBAAKrH,UAAU,SACX0G,EAAMM,KAAKC,QAAUP,EAAMM,KAAK9G,MAAM,O,+BAc9CoH,GAGHtE,KAAKb,MAAM5B,SAASqB,EAAW0F,M,6CAQjCtE,KAAKb,MAAM5B,SN1ET,CACFJ,KAAO,aACPC,QAAU,O,2CM8EV4C,KAAKb,MAAM5B,SAASc,EAAQ2B,KAAKb,MAAMqD,MAAMC,OAAOnF,O,2IAapD,OAAO,I,gDAGe2C,M,+BAIjB,IAAD,OAIJ,OACI,6BAEA,yBAAKjD,UAAU,OACX,yCACA,kBAAC,IAAD,CAAM8C,GAAG,UAAT,SAGJ,kBAACkB,EAAA,EAAD,CACAC,WAAS,EACTC,UAAU,MACVC,QAAQ,SACRC,WAAW,UAEP,kBAACJ,EAAA,EAAD,CAAMxB,MAAI,EAAC6B,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACjC,yBAAKxE,UAAU,QACX,0BAAMwH,SAAUxE,KAAKb,MAAMsF,aAAa,SAAC5B,GAAD,OAAS,EAAK2B,SAAS3B,KAAS6B,OAAO,QAE3E,kBAACC,EAAA,EAAD,CACIT,QAAQ,mBACRV,KAAK,aACLzB,UAAW/B,KAAK4E,mBAGpB,kBAACD,EAAA,EAAD,CACIT,QAAQ,kBACRV,KAAK,YACLzB,UAAW/B,KAAK4E,mBAGpB,kBAACD,EAAA,EAAD,CACIT,QAAQ,cACRV,KAAK,QACLzB,UAAW/B,KAAK6E,wBAGpB,kBAACF,EAAA,EAAD,CACIT,QAAQ,eACRV,KAAK,SACLzB,UAAW/B,KAAK8E,yBAGpB,kBAACH,EAAA,EAAD,CACIT,QAAQ,oBACRV,KAAK,cACLzB,UAAW/B,KAAK4E,mBAGpB,kBAACD,EAAA,EAAD,CACIT,QAAQ,YACRV,KAAK,MACLzB,UAAW/B,KAAK8E,yBAGpB,kBAACH,EAAA,EAAD,CACIT,QAAQ,oBACRV,KAAK,cACLzB,UAAW/B,KAAK+E,sBAIpB,4BAAQ5H,KAAK,UAAb,mB,GArQTgD,aAkVHC,kBA5BhB,SAAyBC,GAGrB,IAAMf,EAAQe,EAAMf,MAChB0F,EAAa,GAEjB,GAAe,IADAS,OAAOC,QAAQpG,GAAOuE,QACM,kBAAhBvE,EAAMY,MAAqC,OAAfZ,EAAMY,KAAe,CACxE,IAAMA,EAAOG,EAAMf,MAAMY,KACzB8E,EAAc,CACVtF,IAAMQ,EAAKR,IACXC,WAAaO,EAAKP,WAClBC,UAAYM,EAAKN,UACjBuC,MAAQjC,EAAKiC,MACbC,OAASlC,EAAKkC,OACdH,YAAc/B,EAAK+B,YACnBpC,YAAcK,EAAKL,YACnBqC,IAAMhC,EAAKgC,KAInB,MAAO,CACHtE,KAAMyC,EAAMf,MACZ4F,cAAgBF,IAMkB,CAAC3G,UAAUD,YAAYQ,aAAaI,cAA9DoB,CACZ+E,YAAU,CACNC,SAlER,SAAkBd,GAEd,IAAMe,EAAS,GA8Bf,OA5BIf,EAAO3E,aACP0F,EAAO1F,WAAa,2BAGpB2E,EAAO1E,YACPyF,EAAOzF,UAAY,0BAGnB0E,EAAOnC,QACPkD,EAAOlD,MAAQ,sBAGfmC,EAAOlC,SACPiD,EAAOjD,OAAS,uBAGhBkC,EAAOzE,cACPwF,EAAOxF,YAAc,4BAGrByE,EAAOpC,MACPmD,EAAOnD,IAAM,oBAGboC,EAAOrC,cACPoD,EAAOpD,YAAc,4BAGlBoD,GAmCHC,KAAM,eACNC,oBAAqB,GAHzBJ,CAIGK,I,yCC7RQpF,mBANf,SAAyBC,GACrB,MAAM,CACFH,KAAOG,EAAMH,OAINE,CA3DM,SAAC,GAAqB,EAApBF,KAAqB,IAAhByF,EAAe,EAAfA,UAElBC,EAAQ,CACV,CACIzI,KAAO,UACP0I,KAAO,OACPC,KAAO,OACPC,KAAO,IACPC,YAAa,GAEjB,CACI7I,KAAO,UACP0I,KAAO,cACPC,KAAO,QACPC,KAAO,SACPC,YAAa,GAEjB,CACI7I,KAAO,UACP0I,KAAO,OACPC,KAAO,WACPC,KAAO,aACPC,YAAa,IAwBrB,OACI,6BATAJ,EAAMrG,IAAI,SAACC,EAAKyG,GAER,OAdI,SAACzG,EAAKyG,GAAN,OACZ,yBAAKxG,IAAKwG,EAAGjJ,UAAWwC,EAAKrC,KAAM4C,QAAS4F,GACxC,kBAAC,IAAD,CAAM7F,GAAIN,EAAKuG,MACP,kBAAC,KAAD,CAAavC,KAAMhE,EAAKqG,OACvBrG,EAAKsG,OAUHI,CAAQ1G,EAAKyG,QC1BrBE,GAfH,SAAChH,GACT,OACE,kBAAC,KAAD,CACEiH,QAAWjH,EAAMiH,QACjBT,UAAaxG,EAAMwG,UACnBU,SAAY,CACRC,WAAa,UACb1F,SAAW,UAGb,kBAAC,GAAD,CAAc+E,UAAaxG,EAAMwG,cC6BxBY,G,2MArCZlG,MAAQ,CACJ+F,SAAU,G,EAGdT,UAAY,WACR,EAAK3C,SAAS,CACVoD,SAAU,K,wEAIR,IAAD,OACL,OACI,gCACI,yBAAKpJ,UAAU,YAEX,kBAAC,KAAD,CAAawG,KAAK,OACfzD,QAAU,kBAAI,EAAKiD,SAAS,CAACoD,SAAU,KACtCI,MAAO,CACHxE,MAAQ,UACRyE,QAAU,OACVC,OAAS,cAItB,kBAAC,GAAD,CACKN,QAAWpG,KAAKK,MAAM+F,QACtBT,UAAa,kBAAK,EAAKA,eAEnB,kBAAC,IAAD,CAAM7F,GAAG,IAAI9C,UAAU,QAAvB,oB,GA9BHmD,aCWTwG,GAZA,SAACxH,GACZ,OAEI,6BACI,kBAAC,GAAD,MACA,6BACMA,EAAMkF,YCmBTuC,GAhBA,WACX,OACI,kBAAC,GAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,aAAaC,OAAK,EAAE/E,UAAYY,IAC5C,kBAAC,IAAD,CAAOkE,KAAK,kBAAkBC,OAAK,EAAE/E,UAAYgF,IACjD,kBAAC,IAAD,CAAOF,KAAK,aAAaC,OAAK,EAAC/E,UAAYtB,IAC3C,kBAAC,IAAD,CAAOoG,KAAK,SAASC,OAAK,EAAC/E,UAAYvB,IACvC,kBAAC,IAAD,CAAOqG,KAAK,IAAIC,OAAK,EAAE/E,UAAYhF,IACnC,kBAAC,IAAD,CAAOgF,UAAWW,O,ynCCrBnB,I,UCWAsE,GANKC,YAAgB,CAClChC,KCNa,WAA0B,IAAjB5E,EAAgB,uDAAV,GAAG6G,EAAO,uCACpC,OAAOA,EAAO/J,MACV,IAAK,YACD,OAAO,GAAP,GAAYkD,EAAZ,CAAkB4E,KAAKiC,EAAO9J,UAClC,QACI,OAAOiD,IDEjBf,MDPa,WAA0B,IAAjBe,EAAgB,uDAAV,GAAG6G,EAAO,uCACpC,OAAOA,EAAO/J,MACV,IAAK,iBAEL,IAAK,mBAEL,IAAK,iBAEL,IAAK,aAEL,IAAK,WACD,OAAO,MAAKkD,EAAZ,CAAkBH,KAAKgH,EAAO9J,UAClC,IAAK,YACD,OAAO,MAAKiD,EAAZ,CAAkBf,MAAM4H,EAAO9J,UACnC,IAAK,oBAEL,IAAK,sBAEL,IAAK,oBACD,OAAO,MAAKiD,EAAZ,CAAkBH,KAAKgH,EAAO9J,UAClC,IAAK,cACD,OAAO,MAAKiD,EAAZ,CAAkBH,KAAKgH,EAAO9J,QAAQyB,MAC1C,IAAK,cACD,OAAO,MAAKwB,EAAZ,CAAkBH,KAAKgH,EAAO9J,UAClC,QACI,OAAOiD,ICjBjBiF,KAAO6B,OEFHC,GAA6BC,YAAgBC,IAAkBC,IAAlCF,CAA8CG,KAEjFC,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOP,GAA2BQ,KACxC,kBAAC,IAAD,KACI,kBAAC,GAAD,QAIRC,SAASC,eAAe,W","file":"static/js/main.1200f886.chunk.js","sourcesContent":["/**\n* home page\n* \n*/\n    import React from 'react';\n    import './home.css';\n    const Home = () => {\n        return (\n            <div className='welcome'>\n               Welcome To Mail sender\n            </div>\n        );\n    };\n    \n    export default Home;","/**\n *  actions : all actions which are used in this project\n */\nimport axios from 'axios';\nimport {reset} from 'redux-form';\n\n\n\n/*=============== Send Mail With Data\n===========================*/\n\n\nfunction mailSendSuccess(response) {\n    return{\n        type : 'SEND_MAIL',\n        payload : response\n    } \n}\n\nfunction mailSendError(error) {\n   // console.log(error);\n\treturn {\n\t\ttype: 'SEND_MAIL',\n\t\tpayload: error\n\t};\n}\n\n\nexport const sendMailWithData = (id) => (dispatch) =>{\n    //console.log(data)\n    const request = axios.post(`/api/sendMail?id=${id}`)\n    .then(response => {\n      //  console.log(response.data);\n        if(response.data.post){\n            alert('Email Sent successfully.')\n            dispatch(reset('sendMail'))\n            dispatch(mailSendSuccess(response.data))\n        }else{\n            dispatch(mailSendError(response.data));\n            alert('Error while sending email.Please try again later')\n        }\n        return response.data \n    })\n    .catch((err) => {\n         dispatch(mailSendError(err));\n         alert('Error while sending email.Please try again later')\n    });\n}\n\n\n\n\n/*=============== Add User\n===========================*/\n\nfunction addUserStart() {\n  //  console.log('start')\n\treturn {\n\t\ttype: 'ADD_USER_START',\n\t\tpayload: 'start'\n\t};\n}\n\nfunction addUserSuccess(response) {\n //   console.log('done')\n\treturn {\n\t\ttype: 'ADD_USER_SUCCESS',\n\t\tpayload: 'done'\n\t};\n}\n\nfunction addUserError(error) {\n   // console.log(error);\n\treturn {\n\t\ttype: 'ADD_USER_ERROR',\n\t\tpayload: 'error'\n\t};\n}\n\nexport const addUser = (data) => (dispatch) => {\n  //  console.log(data)\n    dispatch(addUserStart());\n\n    const response = axios.post('/api/user',data)\n    .then(response => {\n       // console.log(response)\n        if(response.data.success){\n            alert('Data uploaded Successfully.')\n            dispatch(reset('addUserForm'))\n            dispatch(addUserSuccess(response))\n        }else{\n            dispatch(addUserError('error while storing data.'));\n            alert('error while storing data.')\n        }\n    })\n    .catch((error) => {\n        dispatch(addUserError(error));\n        alert('error while storing data.')\n    })\n\n}\n\n\n\n\n//clearUser : clear user in store : add user page \nexport function clearUser(){\n    return{\n        type : 'CLEAR_USER',\n        payload : {}\n    }\n}\n\n\n\n\n/*=============== Edit User\n===========================*/\n\n\n//getUser\nexport function getUser(id){\n    const request = axios.get(`/api/getUser?id=${id}`)\n                    .then(response => response.data)    \n        return{\n            type : 'GET_USER',\n            payload : request\n        }\n}\n\n//getUsers : get all users\nexport function getUsers(\n    limit = 10,\n    start = 0,\n    order = 'asc',\n    list = ''\n\n){\n    const request = axios.get(`/api/getUsers?limit=${limit}&skip=${start}&order=${order}`)\n                    .then( response => {\n                        if(list){\n                            return [...list,...response.data]\n                        }else{\n                            return response.data\n                        }\n                    })\n\n\n    return{\n        type : 'GET_USERS',\n        payload : request \n    }\n}\n\n\n/*********\n *  Update\n ***********************/\nfunction updateUserStart() {\n  //  console.log('start')\n\treturn {\n\t\ttype: 'UPDATE_USER_START',\n\t\tpayload: 'start'\n\t};\n}\n\nfunction updateUserSuccess(response) {\n   // console.log('done')\n\treturn {\n\t\ttype: 'UPDATE_USER_SUCCESS',\n\t\tpayload: response.doc\n\t};\n}\n\nfunction updateUserError(error) {\n    //console.log(error);\n\treturn {\n\t\ttype: 'UPDATE_USER_ERROR',\n\t\tpayload: error.doc\n\t};\n}\n\n\n//updateUser\nexport const updateUser = (data) => (dispatch) => {\n    //console.log(data)\n    \n    const request = axios.post(`/api/update_user`,data)\n                    .then(response => {\n                     //   console.log(response)\n                        if(response.data.success){\n                            alert('Data updated Successfully.')\n                            dispatch(updateUserSuccess(response.data))\n                        }else{\n                            dispatch(updateUserError(response.data));\n                            alert('error while updating data.')\n                        }\n                    })\n                    .catch((error) => {\n                        alert('error while updating data.')\n                        return\n                    })\n    \n}\n\n\n/*=============== Delete User\n===========================*/\n\nfunction deleteUserResponse(response) {\n\treturn {\n\t\ttype: 'DELETE_USER',\n\t\tpayload: response\n\t};\n}\n\n//deleteBook\nexport const deleteUser = (id) => (dispatch) => {\n \n     const request =   axios.delete(`/api/delete_user?id=${id}`)\n                            .then(response => {\n                                //console.log(response)\n                                if(response.data){\n                                    alert('Data deleted Successfully.')\n                                    dispatch(deleteUserResponse(response.data))\n                                }else{\n                                    dispatch(deleteUserResponse(response.data));\n                                    alert('error while deleting data.')\n                                }\n                            })\n                            .catch((error) => {\n                                alert('error while deleting data.')\n                                return\n                            })\n\n }\n","   /**\n    * users : all users\n    */\n   import React, { Component } from 'react';\n   import { connect } from 'react-redux';\n   import { getUsers , deleteUser , sendMailWithData} from '../../actions';\n   import moment from 'moment-js'; \n   import { Link } from 'react-router-dom';\n\n   \n   class users_container extends Component {\n   \n   componentWillMount(){\n       //console.log(this.props)\n       this.props.dispatch(getUsers(5,0,'desc'))\n   }\n\n   deleteUser = (id) => {\n        this.props.dispatch(deleteUser(id))\n    }\n    sendMail = (id) => {\n        alert(id)\n        this.props.dispatch(sendMailWithData(id))\n    }\n    componentWillReceiveProps(nextProps){\n        //onsole.log(nextProps.data.user)\n        if(nextProps.data.user){\n            this.props.dispatch(getUsers(5,0,'desc'))\n        }\n    }\n\n   showUsers = (data) => (\n       data.users ?   \n           data.users.map(item => (\n               <tr key={item._id}>\n                   <td>\n                     {item.first_name + ' ' + item.last_name}\n                   </td>\n                   <td>{item.designation}</td>\n                 {/*  <td>{ moment(item.createAt).format(\"MM/DD/YY\") }</td> */}\n                   <td><Link to={`/users/${item._id}/edit`}>E</Link></td>\n                   <td><Link to={`/users/${item._id}`}>V</Link></td>\n                   <td onClick={() => this.deleteUser(`${item._id}`)}>D</td>\n                   <td onClick={() => this.sendMail(`${item._id}`)}>S</td>\n               </tr>\n           ))\n       : null\n   )\n       render() {\n           let data = this.props.data;\n   \n   \n           return (\n               <div className=\"user_posts\">\n               <h4>Users:</h4>\n                  <table>\n                      <thead>\n                          <tr>\n                              <th>Name</th>\n                              <th>Designation</th>\n                              <th>Edit</th>\n                              <th>View</th>\n                              <th>Delete</th>\n                              <th>Send</th>\n                          </tr>\n                      </thead>\n                      <tbody>\n                          {this.showUsers(data)}\n                      </tbody>\n                  </table>\n               </div>\n           )\n       }\n   }\n   \n   \n   function mapStateToProps(state){\n      console.log(state)\n       return{\n           data : state.users\n       }\n   }\n   \n   \n   export default connect(mapStateToProps)(users_container)\n\n\n  ","import React from 'react';\nimport Users_Container from '../../containers/Users/users_container.js'\n\nconst Users = () => {\n    return(\n        <div>\n            <Users_Container/>\n        </div>\n    )\n}\n\nexport default Users;","import React , { Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid} from '@material-ui/core';\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { getUser , clearUser } from '../../actions'\n\nimport './user_container.css';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\n\nclass UserContainer extends Component {\n\n    componentWillUnmount() {\n        //console.log('component will unmount')\n        this.props.dispatch(clearUser())\n    }\n\n    componentWillMount(){\n        this.props.dispatch(getUser(this.props.match.params.id))\n    }\n\n    renderTemplate = (data) => (\n        data ? \n        <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n                <Grid item xs={12} sm={8} md={8} lg={6}>\n                        <Card className='card'>\n                        <CardActionArea>\n                            <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                               { data.first_name + ' ' + data.last_name}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h5\">\n                               Designation: {data.designation}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h5\">\n                               Description: {data.description}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h5\">\n                              Age: {data.age}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h5\">\n                               Email: {data.email}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h5\">\n                               Mobile: {data.mobile}\n                            </Typography>\n                            \n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            <Button size=\"small\" color=\"primary\">\n                            Share\n                            </Button>\n                            <Link to='/users'>\n                                <Button size=\"small\" color=\"primary\">\n                                Back\n                                </Button>\n                            </Link>\n                        </CardActions>\n                        </Card>\n                </Grid>\n            </Grid>\n            : null\n    )\n\nrender(){\n    const data = this.props.data;\n    return (\n        <div>\n            {this.renderTemplate(data)}\n        </div>\n       \n      );\n}\n \n}\n\n\n\nfunction mapStateToProps(state){\n    console.log(state)\n    return {\n        data: state.users.user,\n    }\n}\n\n\nexport default connect(mapStateToProps)(UserContainer);","import React from 'react';\n\nconst FourOFour = () => {\n    return(\n        <div>FourOFour</div>\n    )\n}\n\nexport default FourOFour;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Grid} from '@material-ui/core';\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { addUser , clearUser } from '../../actions'\n/*------- redux form --------*/\nimport { Field, reduxForm  } from 'redux-form';\n\nclass AddUser extends Component {\n/*\n    state = {\n        bookImage : null,\n        bookName : '',\n        imageUrl : '',\n        isSubmited : false,\n        bookData : null,\n        loader : false,\n        show : true\n    }\n*/\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n       //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderInputEmailField  --------*/\n    renderInputEmailField(field){\n        //    console.log(field)\n         const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n         return (\n             <div className={className}>\n                 <label>{field.myLabel}</label>\n                 <input type=\"email\" {...field.input}   onChange = {field.input.onChange}  />\n                 <div className=\"error\">\n                     {field.meta.touched? field.meta.error:''}\n                 </div>\n             </div>\n         )\n     }\n \n\n/*------- renderFileInputField  --------*/\nhandleFileChange = (event) => {\n    console.log(event.target.files[0]);\n    if (event.target.files && event.target.files[0]) {\n        this.setState({\n          imageUrl : URL.createObjectURL(event.target.files[0]),\n          show : true\n        });\n      }\n\n  //  console.log(this.state.bookImage)\n     if(event.target.file){\n        this.setState({\n            bookImage : event.target.files[0],\n            bookName : event.target.files[0].name\n        })\n     } \n    \n}\n\n\n\nrenderFileInputField = (field) => {\n    if(field.input.value){\n        console.log(field.input.value.length)\n    }\n    const fileInputKey = field.input.value ? this.state.bookName : +new Date();  // key = {fileInputKey}\n    console.log(fileInputKey)\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    //console.log(field.input.value);\n\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            key={fileInputKey}\n            type=\"file\"   \n            onChange = {field.input.onChange} \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\"  \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n\n\n\n  \n/*------- onSubmit() : runs on submit  --------*/\n    onSubmit(values){       \n          console.log(values)\n          this.props.dispatch(addUser(values));\n         this.setState({\n             isSubmited : true\n         })\n    }\n\n    componentWillUnmount() {\n        //console.log('component will unmount')\n\n        this.props.dispatch(clearUser())\n    }\n\n    componentWillMount(){\n        //console.log('component will mount')\n        this.props.dispatch(clearUser())\n    }\n\n    componentDidUpdate(){\n        //console.log('component did update')\n    }\n\n    componentWillUpdate(){\n        //console.log('component will update')\n    }\n\n    shouldComponentUpdate(){\n        //console.log('component should update')\n        return true\n    }\n    \n    componentWillReceiveProps(nextProps){\n        //console.log('component will reciveProps')\n\n      \n    }\n  \n    render(){\n\n       //console.log(this.props);\n\n        return(\n            <div>\n\n            <div className=\"top\">\n                <h3>Add New User</h3>\n                <Link to=\"/\">Back</Link>\n            </div>\n\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n                <Grid item xs={12} sm={8} md={8} lg={6}>\n                    <div className=\"Form\">                    \n                        <form onSubmit={this.props.handleSubmit((event)=>this.onSubmit(event))} method=\"POST\">\n\n                            <Field\n                                myLabel=\"Enter First Name\"\n                                name=\"first_name\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Last Name\"\n                                name=\"last_name\"\n                                component={this.renderInputField}\n                            />\n                            \n                            <Field\n                                myLabel=\"Enter Email\"\n                                name=\"email\"\n                                component={this.renderInputEmailField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Mobile\"\n                                name=\"mobile\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Designation\"\n                                name=\"designation\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter age\"\n                                name=\"age\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Description\"\n                                name=\"description\"\n                                component={this.renderTextareaField}\n                            />\n\n                        \n                            <button type=\"submit\">Submit</button>\n\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n            </div>          \n        )\n    }\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n   // console.log(values)\n    const errors = {};\n\n    if(!values.first_name){\n        errors.first_name = \"The first name is empty\"\n    }\n\n    if(!values.last_name){\n        errors.last_name = \"The last name is empty\"\n    }\n\n    if(!values.email){\n        errors.email = \"The email is empty\"\n    }\n\n    if(!values.mobile){\n        errors.mobile = \"The mobile is empty\"\n    }\n\n    if(!values.designation){\n        errors.designation = \"The designation is empty\"\n    }\n\n    if(!values.age){\n        errors.age = \"The age is empty\"\n    }\n\n    if(!values.description){\n        errors.description = \"The description is empty\"\n    }\n\n    return errors;\n}\n    /*------- it returns messages when action is called and state going to change  --------*/\n   \nfunction mapStateToProps(state){\n    //console.log(state)\n    \n    let user_value = {}\n    user_value =  {\n        first_name : '',\n        last_name : '',\n        email : '',\n        mobile : '',\n        description : '',\n        designation : '',\n        age : ''\n    }\n\n    return {\n        data: state.mail,\n        initialValues : user_value,\n    }\n}\n\n    /*------- reduxForm : connects redux-form with react form   --------*/\n\n export default connect( mapStateToProps, {addUser,clearUser})(\n    reduxForm({\n        validate,\n        form: 'addUserForm',\n        enableReinitialize : true,\n    })(AddUser)\n );","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Grid} from '@material-ui/core';\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { getUser , clearUser , updateUser , deleteUser } from '../../actions'\n/*------- redux form --------*/\nimport { Field, reduxForm  } from 'redux-form';\n\nclass Edit extends Component {\n/*\n    state = {\n        bookImage : null,\n        bookName : '',\n        imageUrl : '',\n        isSubmited : false,\n        bookData : null,\n        loader : false,\n        show : true\n    }\n    \n*/\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n       //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderInputEmailField  --------*/\n    renderInputEmailField(field){\n        //    console.log(field)\n         const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n         return (\n             <div className={className}>\n                 <label>{field.myLabel}</label>\n                 <input type=\"email\" {...field.input}   onChange = {field.input.onChange}  />\n                 <div className=\"error\">\n                     {field.meta.touched? field.meta.error:''}\n                 </div>\n             </div>\n         )\n     }\n \n\n/*------- renderFileInputField  --------*/\n/*handleFileChange = (event) => {\n  //  console.log(event.target.files[0]);\n    if (event.target.files && event.target.files[0]) {\n        this.setState({\n          imageUrl : URL.createObjectURL(event.target.files[0]),\n          show : true\n        });\n      }\n\n  //  console.log(this.state.bookImage)\n     if(event.target.file){\n        this.setState({\n            bookImage : event.target.files[0],\n            bookName : event.target.files[0].name\n        })\n     } \n    \n}\n\n\n\nrenderFileInputField = (field) => {\n    if(field.input.value){\n       // console.log(field.input.value.length)\n    }\n    const fileInputKey = field.input.value ? this.state.bookName : +new Date();  // key = {fileInputKey}\n   // console.log(fileInputKey)\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    //console.log(field.input.value);\n\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            key={fileInputKey}\n            type=\"file\"   \n            onChange = {field.input.onChange} \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n*/\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\"  \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        //console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n\n\n\n  \n/*------- onSubmit() : runs on submit  --------*/\n    onSubmit(values){       \n         // console.log(values)\n\n          this.props.dispatch(updateUser(values));\n      \n         \n    }\n\n    componentWillUnmount() {\n        //console.log('component will unmount')\n\n        this.props.dispatch(clearUser())\n    }\n\n    componentWillMount(){\n       // console.log('component will mount')\n      //  console.log(this.props.match.params.id)\n        this.props.dispatch(getUser(this.props.match.params.id))\n    }\n\n    componentDidUpdate(){\n      //  console.log('component did update')\n    }\n\n    componentWillUpdate(){\n     //  console.log('component will update')\n    }\n\n    shouldComponentUpdate(){\n       // console.log('component should update')\n        return true\n    }\n    \n    componentWillReceiveProps(nextProps){\n      //  console.log('component will reciveProps')\n    }\n  \n    render(){\n\n       //console.log(this.props);\n\n        return(\n            <div>\n\n            <div className=\"top\">\n                <h3>Edit User</h3>\n                <Link to=\"/users\">Back</Link>\n            </div>\n\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n                <Grid item xs={12} sm={8} md={8} lg={6}>\n                    <div className=\"Form\">                    \n                        <form onSubmit={this.props.handleSubmit((event)=>this.onSubmit(event))} method=\"POST\">\n\n                            <Field\n                                myLabel=\"Enter First Name\"\n                                name=\"first_name\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Last Name\"\n                                name=\"last_name\"\n                                component={this.renderInputField}\n                            />\n                            \n                            <Field\n                                myLabel=\"Enter Email\"\n                                name=\"email\"\n                                component={this.renderInputEmailField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Mobile\"\n                                name=\"mobile\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Designation\"\n                                name=\"designation\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter age\"\n                                name=\"age\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Description\"\n                                name=\"description\"\n                                component={this.renderTextareaField}\n                            />\n\n                        \n                            <button type=\"submit\">Submit</button>\n\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n            </div>          \n        )\n    }\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n   // console.log(values)\n    const errors = {};\n\n    if(!values.first_name){\n        errors.first_name = \"The first name is empty\"\n    }\n\n    if(!values.last_name){\n        errors.last_name = \"The last name is empty\"\n    }\n\n    if(!values.email){\n        errors.email = \"The email is empty\"\n    }\n\n    if(!values.mobile){\n        errors.mobile = \"The mobile is empty\"\n    }\n\n    if(!values.designation){\n        errors.designation = \"The designation is empty\"\n    }\n\n    if(!values.age){\n        errors.age = \"The age is empty\"\n    }\n\n    if(!values.description){\n        errors.description = \"The description is empty\"\n    }\n\n    return errors;\n}\n    /*------- it returns messages when action is called and state going to change  --------*/\n   \nfunction mapStateToProps(state){\n   // console.log(state)\n    \n    const users = state.users\n    let user_value = {}\n    const length = Object.entries(users).length;\n    if( length !== 0 && typeof(users.user) === \"object\" && users.user !== null ){\n        const user = state.users.user\n        user_value =  {\n            _id : user._id,\n            first_name : user.first_name,\n            last_name : user.last_name,\n            email : user.email,\n            mobile : user.mobile,\n            description : user.description,\n            designation : user.designation,\n            age : user.age\n        }\n    }\n    \n    return {\n        data: state.users,\n        initialValues : user_value,\n    }\n}\n\n    /*------- reduxForm : connects redux-form with react form   --------*/\n\n export default connect( mapStateToProps, {getUser , clearUser , updateUser , deleteUser})(\n    reduxForm({\n        validate,\n        form: 'editUserForm',\n        enableReinitialize : true,\n    })(Edit)\n );","   /**\n    * sidenavitems : items for side navbar\n    * \n    */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport { connect } from 'react-redux';\n\n\nconst SideNavItems = ({user,onHideNav}) => {\n\n    const items = [\n        {\n            type : 'navItem',\n            icon : 'home',\n            text : 'Home',\n            link : '/',\n            restricted : false\n        },\n        {\n            type : 'navItem',\n            icon : 'file-text-o',\n            text : 'Users',\n            link : '/users',\n            restricted : true\n        },\n        {\n            type : 'navItem',\n            icon : 'plus',\n            text : 'Add User',\n            link : '/users/add',\n            restricted : true\n        }\n    ]\n\n    const element = (item,i) => (\n        <div key={i} className={item.type} onClick={onHideNav}>\n            <Link to={item.link}>\n                    <FontAwesome name={item.icon} />\n                    {item.text}\n            </Link>\n        </div> \n    )\n    \n    \n    const showItems = () => (\n       \n        items.map((item,i)=>{\n         \n                return element(item,i) \n        \n        \n        }) \n    )\n\n    return (\n        <div>\n            {showItems()}\n        </div>\n    );\n};\n\nfunction mapStateToProps(state){\n    return{\n        user : state.user\n    }\n}\n\nexport default connect(mapStateToProps)(SideNavItems);","/**\n * sidenav : side navbar\n * \n */\nimport React from 'react';\nimport SideNav from 'react-simple-sidenav';\nimport SideNavItems from '../SideNavItems/sidenavitems';\n\n\nconst Nav = (props) => {\n    return (\n      <SideNav\n        showNav = {props.showNav}\n        onHideNav = {props.onHideNav}\n        navStyle = {{\n            background : '#242424',\n            maxWidth : '220px'\n        }}\n      >\n          <SideNavItems onHideNav = {props.onHideNav} /> \n      </SideNav>\n    );\n};\n\nexport default Nav;","   /**\n    * Header.js : header component\n    *  \n    */\n   import React, { Component } from 'react'\n   import FontAwesome from 'react-fontawesome';\n   import  { Link } from 'react-router-dom';\n   import Nav from '../Sidenav/sidenav';\n   \n   class Header extends Component {\n   \n       state = {\n           showNav : false\n       }\n   \n       onHideNav = () =>{\n           this.setState({\n               showNav : false\n           })\n       }\n   \n       render() {\n           return (\n               <header>\n                   <div className=\"open_nav\">\n   \n                       <FontAwesome name=\"bars\"\n                          onClick= {()=>this.setState({showNav : true})}\n                           style={{\n                               color : '#ffffff',\n                               padding : '10px',\n                               cursor : 'pointer'\n                           }}\n                       />\n                  </div>\n                  <Nav\n                       showNav = {this.state.showNav}\n                       onHideNav = {()=> this.onHideNav()}\n                  />\n                           <Link to='/' className='logo'>\n                                Mail Sender\n                            </Link>\n                 \n               </header>\n            )\n       }\n   }\n   \n   export default  Header;\n           ","/**\n * layout.js : Main layout component\n * \n */\nimport React from 'react';\nimport Header from '../.././components/Header/header';\n\n\nconst Layout = (props) => {\n    return (\n\n        <div>\n            <Header/>\n            <div>\n                 {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;","import React from 'react';\nimport  { Switch , Route  } from 'react-router-dom';\nimport Home from './components/Home/home';\nimport Users from './components/UsersView/users';\nimport User from  './components/UserView/user';\nimport FourOFour from  './components/FourOFour/fourofour';\nimport AddUser from './containers/Admin/add';\nimport EditUser from './containers/Admin/edit';\nimport UserContainer from './containers/User/user_container.js';\n\n\n\n\n\nimport Layout from './hoc/Layout/layout';\n\n\nconst Routes = () => {\n    return (\n        <Layout>\n            <Switch> \n                <Route path=\"/users/add\" exact  component={ AddUser } /> \n                <Route path=\"/users/:id/edit\" exact  component={ EditUser } />          \n                <Route path=\"/users/:id\" exact component={ UserContainer } />\n                <Route path=\"/users\" exact component={ Users } />\n                <Route path=\"/\" exact  component={ Home } />\n                <Route component={FourOFour}/>     \n            </Switch>\n        </Layout>\n       \n    );\n};\n\nexport default Routes;","/**\n * \n * users_reducer : which containe all reducers related to users\n *  \n */\nexport default function(state={},action){\n    switch(action.type){\n        case 'ADD_USER_START':\n            return { ...state,user:action.payload }\n        case 'ADD_USER_SUCCESS':\n            return { ...state,user:action.payload }\n        case 'ADD_USER_ERROR':\n            return { ...state,user:action.payload }   \n        case 'CLEAR_USER':\n            return { ...state,user:action.payload }   \n        case 'GET_USER':\n            return { ...state,user:action.payload }  \n        case 'GET_USERS':\n            return { ...state,users:action.payload }  \n        case 'UPDATE_USER_START':\n            return { ...state,user:action.payload }\n        case 'UPDATE_USER_SUCCESS':\n            return { ...state,user:action.payload }\n        case 'UPDATE_USER_ERROR':\n            return { ...state,user:action.payload }   \n        case 'UPDATE_USER':\n            return { ...state,user:action.payload.doc }   \n        case 'DELETE_USER':\n            return { ...state,user:action.payload }  \n        default:\n            return state;\n    }\n}","/**\n * rootReducer : combine all reducers\n * \n */\nimport { combineReducers } from 'redux';\nimport mail from './mail_reducer';\nimport users from './users_reducer';\n\nimport { reducer as formReducer } from 'redux-form';\n\nconst rootReducer = combineReducers({\n  mail,\n  users,\n  form : formReducer\n});\n\nexport default rootReducer;","/**\n * \n * mail_reducer : which containe all reducers related to mail\n *  \n */\nexport default function(state={},action){\n    switch(action.type){\n        case 'SEND_MAIL':\n            return { ...state,mail:action.payload }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport  { createStore , applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport Routes from './routes';\nimport reducers from './reducers';\n\n\nconst createStoreWithMiddleware =  applyMiddleware(promiseMiddleware,ReduxThunk)(createStore);\n\nReactDOM.render( \n    <Provider store={createStoreWithMiddleware( reducers )}>\n        <BrowserRouter>\n            <Routes />\n        </BrowserRouter>\n    </Provider>\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}