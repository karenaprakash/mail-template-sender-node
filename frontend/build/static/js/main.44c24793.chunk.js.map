{"version":3,"sources":["actions/index.js","containers/Admin/send.js","components/Home/home.js","components/Header/header.js","hoc/Layout/layout.js","routes.js","reducers/mail_reducer.js","reducers/index.js","index.js"],"names":["sendMail","data","console","log","type","payload","axios","post","then","response","SendMail","state","mailSent","isSubmited","renderResult","field","className","meta","touched","error","myLabel","input","onChange","values","this","setState","from","props","dispatch","nextProps","mail","onSubmit","handleSubmit","event","method","Field","name","component","renderInputEmailField","renderInputField","renderTextareaField","Component","connect","mail_value","to","subject","text","initialValues","reduxForm","validate","errors","form","enableReinitialize","Home","Header","Layout","children","Routes","path","exact","rootReducer","combineReducers","action","formReducer","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.44c24793.chunk.js","sourcesContent":["/**\n *  actions : all actions which are used in this project\n */\nimport axios from 'axios';\n\n//clearBookWithReviewer : clear book used when we go inside perticuler book and come outside  \nexport function sendMail(data){\n    console.log(data)\n    const request = axios.post(\"/api/sendMail\",data)\n    .then( response => response.data )\n    return{\n    type : 'SEND_MAIL',\n    payload : request\n    } \n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {reset} from 'redux-form';\n\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { sendMail } from '../../actions'\n/*------- redux form --------*/\nimport { Field, reduxForm  } from 'redux-form';\n\nclass SendMail extends Component {\n\n   state = {\n       mailSent : null ,\n       isSubmited : false\n   }\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n /*------- renderInputEmailField  --------*/\n renderInputEmailField(field){\n        //    console.log(field)\n         const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n         return (\n             <div className={className}>\n                 <label>{field.myLabel}</label>\n                 <input type=\"email\" {...field.input}   onChange = {field.input.onChange}  />\n                 <div className=\"error\">\n                     {field.meta.touched? field.meta.error:''}\n                 </div>\n             </div>\n         )\n     }\n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n       //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n  \n/*------- onSubmit() : runs on submit  --------*/\n    onSubmit(values){       \n        console.log(values)\n        this.setState({\n            isSubmited : true\n        })\n        values.from = \"prakash.raoinfotech@gmail.com\"\n         // console.log(values)\n          this.props.dispatch(sendMail(values));\n    }\n\n    \n    componentWillReceiveProps(nextProps){\n        const mail = nextProps.mail.mail;\n        console.log(mail)\n        if(mail){\n            if(mail.post){\n               this.setState({\n                   mailSent : true\n               })\n            }else{\n                this.setState({\n                    mailSent : false\n                })\n            }\n        }\n      \n    }\n\n \n  renderResult = () => (\n     \n        this.state.isSubmited && this.state.mailSent !== null ? ( this.state.mailSent  ? <h3> Mail Sent </h3> : <h3>Mail Not sent</h3> ) : null          \n     \n)\n    render(){\n\n       //console.log(this.props);\n\n        return(\n            <div className=\"Form\">                  \n                <form onSubmit={this.props.handleSubmit((event)=>this.onSubmit(event))} method=\"POST\">\n\n                    { this.renderResult()}\n                     <Field\n                        myLabel=\"To Email\"\n                        name=\"to\"\n                        component={this.renderInputEmailField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter Subject\"\n                        name=\"subject\"\n                        component={this.renderInputField}\n                    />\n\n                    <Field\n                        myLabel=\"Enter text\"\n                        name=\"text\"\n                        component={this.renderTextareaField}\n                    />\n                \n                    <button type=\"submit\">Submit</button>\n                \n                </form>\n            </div>\n        )\n    }\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n   // console.log(values)\n    const errors = {};\n\n    \n    if(!values.to){\n        errors.to = \"The to_email is empty\"\n    }\n\n    if(!values.subject){\n        errors.subject = \"The subject is empty\"\n    }\n\n    if(!values.text){\n        errors.text = \"The text is empty\"\n    }\n\n    return errors;\n}\n    /*------- it returns messages when action is called and state going to change  --------*/\n   \nfunction mapStateToProps(state){\n    console.log(state)\n    \n    let mail_value = {}\n    mail_value =  {\n        from : 'prakash.raoinfotech@gmail.com',\n        to : '',\n        subject : '',\n        text : ''\n    }\n\n    return {\n        mail: state.mail,\n        initialValues : mail_value,\n    }\n}\n\n    /*------- reduxForm : connects redux-form with react form   --------*/\n\n export default connect( mapStateToProps, {sendMail})(\n    reduxForm({\n        validate,\n        form: 'sendMail',\n        enableReinitialize : true,\n    })(SendMail)\n );","/**\n* home page\n* \n*/\n    import React from 'react';\n    import SendMail from '../../containers/Admin/send';\n\n    const Home = () => {\n        return (\n            <div>\n                <SendMail/>\n            </div>\n        );\n    };\n    \n    export default Home;","   /**\n    * Header.js : header component\n    *  \n    */\nimport React, { Component } from 'react'\nimport FontAwesome from 'react-fontawesome';\nimport  { Link } from 'react-router-dom';\n\n\nclass Header extends Component {\n\n\n    render() {\n        return (\n            <header>\n             <div className=\"top\">\n                    <h3>Node Mailer</h3>\n                </div>\n            </header>\n         )\n    }\n}\n\nexport default  Header;\n        ","/**\n * layout.js : Main layout component\n * \n */\nimport React from 'react';\nimport Header from '../.././components/Header/header';\n\n\nconst Layout = (props) => {\n    return (\n\n        <div>\n            <Header/>\n            <div>\n                 {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;","import React from 'react';\nimport  { Switch , Route  } from 'react-router-dom';\nimport Home from './components/Home/home';\nimport Layout from './hoc/Layout/layout';\n\n\nconst Routes = () => {\n    return (\n        <Layout>\n            <Switch>\n            \n                <Route path=\"/\" exact component={ Home } />\n               \n            </Switch>\n        </Layout>\n       \n    );\n};\n\nexport default Routes;","/**\n * \n * mail_reducer : which containe all reducers related to mail\n *  \n */\nexport default function(state={},action){\n    switch(action.type){\n        case 'SEND_MAIL':\n            return { ...state,mail:action.payload }\n        default:\n            return state;\n    }\n}","/**\n * rootReducer : combine all reducers\n * \n */\nimport { combineReducers } from 'redux';\nimport mail from './mail_reducer';\nimport { reducer as formReducer } from 'redux-form';\n\nconst rootReducer = combineReducers({\n  mail,\n  form : formReducer\n});\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport  { createStore , applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport Routes from './routes';\nimport reducers from './reducers';\n\n\nconst createStoreWithMiddleware =  applyMiddleware(promiseMiddleware,ReduxThunk)(createStore);\n\nReactDOM.render( \n    <Provider store={createStoreWithMiddleware( reducers )}>\n        <BrowserRouter>\n            <Routes />\n        </BrowserRouter>\n    </Provider>\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}