{"version":3,"sources":["components/Home/home.js","actions/index.js","containers/Users/users_container.js","components/UsersView/users.js","containers/User/user_container.js","components/FourOFour/fourofour.js","containers/Admin/add.js","containers/Admin/edit.js","containers/Login/login.js","containers/Signup/signup.js","hoc/Auth/auth.js","components/Logout/logout.js","components/SideNavItems/sidenavitems.js","components/Sidenav/sidenav.js","components/Header/header.js","hoc/Layout/layout.js","routes.js","reducers/users_reducer.js","reducers/index.js","reducers/mail_reducer.js","index.js"],"names":["Home","className","mailSendError","error","type","payload","sendMailWithData","id","email","dispatch","axios","post","then","response","data","alert","reset","mailSendSuccess","catch","err","addUser","success","clearUser","getUser","get","getUsers","limit","start","order","list","updateUser","doc","updateUserSuccess","deleteUserResponse","deleteUser","delete","signupAdmin","loginAdminError","loginAdmin","password","console","log","isAuth","message","loginAdminSuccess","users_container","props","sendMail","showUsers","users","map","item","TableRow","key","_id","TableCell","component","scope","first_name","last_name","designation","align","to","onClick","this","nextProps","user","Grid","container","direction","justify","alignItems","lg","xs","sm","md","Paper","Table","TableHead","TableBody","Component","connect","state","Users","UserContainer","makeStyles","card","maxWidth","media","height","isOpen","shareBtnClickHandler","setState","handleClose","handleTextFieldChange","e","target","value","renderDialog","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","fullWidth","inputRef","el","onChange","DialogActions","Button","color","renderTemplate","Card","CardActionArea","CardContent","Typography","gutterBottom","variant","description","age","mobile","CardActions","size","match","params","FourOFour","AddUser","handleFileChange","event","files","imageUrl","URL","createObjectURL","show","file","bookImage","bookName","name","renderFileInputField","field","input","length","fileInputKey","Date","meta","touched","myLabel","handleSelectChange","children","values","isSubmited","onSubmit","handleSubmit","method","Field","renderInputField","renderInputEmailField","renderNumberInputField","renderTextareaField","user_value","mail","initialValues","reduxForm","validate","errors","form","enableReinitialize","Edit","Object","entries","Login","login","history","push","renderInputPasswordField","admin_value","Signup","clearAdmin","ComposedClass","reload","AuthenticationCheck","loading","admin","Logout","request","setTimeout","onHideNav","items","icon","text","link","restricted","excluded","element","i","Nav","showNav","navStyle","background","Header","style","padding","cursor","Layout","Routes","path","exact","Auth","EditUser","rootReducer","combineReducers","action","formReducer","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.d98e12a2.chunk.js","sourcesContent":["/**\n* home page\n* \n*/\n    import React from 'react';\n    import './home.css';\n    const Home = () => {\n        return (\n            <div className='welcome'>\n               Welcome To Mail sender\n            </div>\n        );\n    };\n    \n    export default Home;","/**\n *  actions : all actions which are used in this project\n */\nimport axios from 'axios';\nimport {reset} from 'redux-form';\n\n\n\n/*=============== Send Mail With Data\n===========================*/\n\n\nfunction mailSendSuccess(response) {\n    return{\n        type : 'SEND_MAIL',\n        payload : response\n    } \n}\n\nfunction mailSendError(error) {\n   // console.log(error);\n\treturn {\n\t\ttype: 'SEND_MAIL',\n\t\tpayload: error\n\t};\n}\n\n\nexport const sendMailWithData = (id,email) => (dispatch) =>{\n    //console.log(data)\n    const request = axios.post(`/api/sendMail?id=${id}&email=${email}`)\n    .then(response => {\n      //  console.log(response.data);\n        if(response.data.post){\n            alert('Email Sent successfully.')\n            dispatch(reset('sendMail'))\n            dispatch(mailSendSuccess(response.data))\n        }else{\n            dispatch(mailSendError(response.data));\n            alert('Error while sending email.Please try again later')\n        }\n        return response.data \n    })\n    .catch((err) => {\n         dispatch(mailSendError(err));\n         alert('Error while sending email.Please try again later')\n    });\n}\n\n\n\n\n/*=============== Add User\n===========================*/\n\nfunction addUserStart() {\n  //  console.log('start')\n\treturn {\n\t\ttype: 'ADD_USER_START',\n\t\tpayload: 'start'\n\t};\n}\n\nfunction addUserSuccess(response) {\n //   console.log('done')\n\treturn {\n\t\ttype: 'ADD_USER_SUCCESS',\n\t\tpayload: 'done'\n\t};\n}\n\nfunction addUserError(error) {\n   // console.log(error);\n\treturn {\n\t\ttype: 'ADD_USER_ERROR',\n\t\tpayload: 'error'\n\t};\n}\n\nexport const addUser = (data) => (dispatch) => {\n  //  console.log(data)\n    dispatch(addUserStart());\n\n    const response = axios.post('/api/user',data)\n    .then(response => {\n       // console.log(response)\n        if(response.data.success){\n            alert('Data uploaded Successfully.')\n            dispatch(reset('addUserForm'))\n            dispatch(addUserSuccess(response))\n        }else{\n            dispatch(addUserError('error while storing data.'));\n            alert('error while storing data.')\n        }\n    })\n    .catch((error) => {\n        dispatch(addUserError(error));\n        alert('error while storing data.')\n    })\n\n}\n\n\n\n\n//clearUser : clear user in store : add user page \nexport function clearUser(){\n    return{\n        type : 'CLEAR_USER',\n        payload : {}\n    }\n}\n\n\n\n\n/*=============== Edit User\n===========================*/\n\n\n//getUser\nexport function getUser(id){\n    const request = axios.get(`/api/getUser?id=${id}`)\n                    .then(response => response.data)    \n        return{\n            type : 'GET_USER',\n            payload : request\n        }\n}\n\n//getUsers : get all users\nexport function getUsers(\n    limit = 10,\n    start = 0,\n    order = 'asc',\n    list = ''\n\n){\n    const request = axios.get(`/api/getUsers?limit=${limit}&skip=${start}&order=${order}`)\n                    .then( response => {\n                        if(list){\n                            return [...list,...response.data]\n                        }else{\n                            return response.data\n                        }\n                    })\n\n\n    return{\n        type : 'GET_USERS',\n        payload : request \n    }\n}\n\n\n/*********\n *  Update\n ***********************/\nfunction updateUserStart() {\n  //  console.log('start')\n\treturn {\n\t\ttype: 'UPDATE_USER_START',\n\t\tpayload: 'start'\n\t};\n}\n\nfunction updateUserSuccess(response) {\n   // console.log('done')\n\treturn {\n\t\ttype: 'UPDATE_USER_SUCCESS',\n\t\tpayload: response.doc\n\t};\n}\n\nfunction updateUserError(error) {\n    //console.log(error);\n\treturn {\n\t\ttype: 'UPDATE_USER_ERROR',\n\t\tpayload: error.doc\n\t};\n}\n\n\n//updateUser\nexport const updateUser = (data) => (dispatch) => {\n    //console.log(data)\n    \n    const request = axios.post(`/api/update_user`,data)\n                    .then(response => {\n                     //   console.log(response)\n                        if(response.data.success){\n                            alert('Data updated Successfully.')\n                            dispatch(updateUserSuccess(response.data))\n                        }else{\n                            dispatch(updateUserError(response.data));\n                            alert('error while updating data.')\n                        }\n                    })\n                    .catch((error) => {\n                        alert('error while updating data.')\n                        return\n                    })\n    \n}\n\n\n/*=============== Delete User\n===========================*/\n\nfunction deleteUserResponse(response) {\n\treturn {\n\t\ttype: 'DELETE_USER',\n\t\tpayload: response\n\t};\n}\n\n//deleteBook\nexport const deleteUser = (id) => (dispatch) => {\n \n     const request =   axios.delete(`/api/delete_user?id=${id}`)\n                            .then(response => {\n                                //console.log(response)\n                                if(response.data){\n                                    alert('Data deleted Successfully.')\n                                    dispatch(deleteUserResponse(response.data))\n                                }else{\n                                    dispatch(deleteUserResponse(response.data));\n                                    alert('error while deleting data.')\n                                }\n                            })\n                            .catch((error) => {\n                                alert('error while deleting data.')\n                                return\n                            })\n\n }\n\n\n\n/*=============== Add Admin\n===========================*/\n\nfunction signupAdminStart() {\n    //  console.log('start')\n      return {\n          type: 'ADD_ADMIN_START',\n          payload: 'start'\n      };\n  }\n  \n  function signupAdminSuccess(response) {\n   //   console.log('done')\n      return {\n          type: 'ADD_ADMIN_SUCCESS',\n          payload: 'done'\n      };\n  }\n  \n  function signupAdminError(error) {\n     // console.log(error);\n      return {\n          type: 'ADD_ADMIN_ERROR',\n          payload: 'error'\n      };\n  }\n  \n  export const signupAdmin = (data) => (dispatch) => {\n    //  console.log(data)\n      dispatch(signupAdminStart());\n  \n      const response = axios.post('/api/signup',data)\n      .then(response => {\n         // console.log(response)\n          if(response.data.success){\n              alert('Admin Register Successfully.')\n              dispatch(reset('signupAdminForm'))\n              dispatch(signupAdminSuccess(response))\n          }else{\n              dispatch(signupAdminError('error while Register Admin.'));\n              alert('Error while register Admin.')\n          }\n      })\n      .catch((error) => {\n          dispatch(signupAdminError(error));\n          alert('error while Register Admin.')\n      })\n  \n  }\n  \n  //clearUser : clear user in store : add user page \n  export function clearAdmin(){\n      return{\n          type : 'CLEAR_ADMIN',\n          payload : {}\n      }\n  }\n  \n  \n/*=============== login user\n===========================*/\n\n\nfunction loginAdminStart() {\n    //   console.log('done')\n       return {\n           type: 'ADMIN_LOGIN',\n           payload: {}\n       };\n   }\n\nfunction loginAdminSuccess(response) {\n    //   console.log('done')\n       return {\n           type: 'ADMIN_LOGIN',\n           payload: response\n       };\n   }\n   \n   function loginAdminError(error) {\n      // console.log(error);\n       return {\n           type: 'ADMIN_LOGIN',\n           payload: error\n       };\n   }\n\n\nexport const loginAdmin = (email,password) => (dispatch) => {\n       console.log( email + \" \" + password)\n      \n      const response = axios.post('/api/login',{email,password})\n      .then(response => {\n          console.log(response)\n          if(response.data.isAuth){\n              alert(response.data.message)\n              dispatch(loginAdminSuccess(response.data))\n          }else{\n              dispatch(loginAdminError('error while Login user.'));\n              alert(response.data.message)\n          }\n      })\n      .catch((error) => {\n          alert(error)\n          dispatch(loginAdminError(error));\n      })\n\n  }\n  \n  \n/*=============== check authentication\n============================================*/\n\n\n//auth : for authentication\nexport function auth(){\n    const request = axios.get('/api/auth')\n                     .then(response => response.data);\n \n     return {\n         type : 'ADMIN_AUTH',\n         payload : request\n     }\n }","   /**\n    * users : all users\n    */\n    import React, { Component } from 'react';\n    import { connect } from 'react-redux';\n    import { getUsers , deleteUser , sendMailWithData} from '../../actions';\n    import moment from 'moment-js'; \n    import { Link } from 'react-router-dom';\n    import {Grid} from '@material-ui/core';\n    import { makeStyles } from '@material-ui/core/styles';\n    import Table from '@material-ui/core/Table';\n    import TableBody from '@material-ui/core/TableBody';\n    import TableCell from '@material-ui/core/TableCell';\n    import TableHead from '@material-ui/core/TableHead';\n    import TableRow from '@material-ui/core/TableRow';\n    import Paper from '@material-ui/core/Paper';\n    import DeleteIcon from '@material-ui/icons/Delete';\n    import SendIcon from '@material-ui/icons/Send';\n    import EditIcon from '@material-ui/icons/Edit';\n    import VisibilityIcon from '@material-ui/icons/Visibility'; \n    import './users_container.css';\n\n   class users_container extends Component {\n   \n   componentWillMount(){\n       //console.log(this.props)\n       this.props.dispatch(getUsers(5,0,'desc'))\n   }\n\n   deleteUser = (id) => {\n        this.props.dispatch(deleteUser(id))\n    }\n    sendMail = (id) => {\n        alert(id)\n        const email = 'prakash.raoinfotech@gmail.com'\n        this.props.dispatch(sendMailWithData(id,email))\n    }\n    componentWillReceiveProps(nextProps){\n        //onsole.log(nextProps.data.user)\n        if(nextProps.data.user){\n            this.props.dispatch(getUsers(5,0,'desc'))\n        }\n    }\n\n   showUsers = (data) => (\n        data.users ? \n        data.users.map( item  => (\n        <TableRow key={item._id}>\n        <TableCell component=\"th\" scope=\"row\">\n            {item.first_name + \" \" + item.last_name}\n        </TableCell>\n        <TableCell>{item.designation}</TableCell>\n        <TableCell align=\"center\"><Link to={`/users/${item._id}/edit`}><EditIcon/></Link></TableCell>\n        <TableCell align=\"center\"><Link to={`/users/${item._id}`}><VisibilityIcon/></Link></TableCell>\n        <TableCell align=\"center\"\n        onClick={() => this.deleteUser(`${item._id}`)}\n        ><DeleteIcon/></TableCell>\n        <TableCell align=\"center\"\n        onClick={() => this.sendMail(`${item._id}`)}\n        ><SendIcon/></TableCell>\n\n        </TableRow>\n        ))\n        :null\n   )\n       render() {\n           let data = this.props.data;\n   \n   \n           return (\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n                <Grid  item lg={10} xs={10} sm={8} md={8} >\n                    <Paper className='root'>\n                    <Table className='table'>\n                        <TableHead>\n                        <TableRow>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Designation</TableCell>\n                            <TableCell align=\"center\">Edit</TableCell>\n                            <TableCell align=\"center\">View</TableCell>\n                            <TableCell align=\"center\">Delete</TableCell>\n                            <TableCell align=\"center\">Send</TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                             {this.showUsers(data)}\n                        </TableBody>\n                    </Table>\n                    </Paper>\n                </Grid>\n           \n            </Grid>\n              \n           )\n       }\n   }\n   \n   \n   function mapStateToProps(state){\n      console.log(state)\n       return{\n           data : state.users\n       }\n   }\n   \n   \n   export default connect(mapStateToProps)(users_container)\n\n\n  ","import React from 'react';\nimport Users_Container from '../../containers/Users/users_container.js'\n\nconst Users = () => {\n    return(\n        <div>\n            <Users_Container/>\n        </div>\n    )\n}\n\nexport default Users;","import React , { Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n/*------- action which take data from database and send to email  --------*/\n\n/*------- redux form --------*/\nimport { Field, reduxForm  } from 'redux-form';\n/*------- action which all data to data base --------*/\nimport { getUser , clearUser ,sendMailWithData } from '../../actions'\n\nimport './user_container.css';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\n\nclass UserContainer extends Component {\n\n    state = {\n        isOpen : false,\n        email : ''\n    }\n\n    componentWillUnmount() {\n        //console.log('component will unmount')\n        this.props.dispatch(clearUser())\n    }\n\n    componentWillMount(){\n        this.props.dispatch(getUser(this.props.match.params.id))\n    }\n\n    shareBtnClickHandler = () => {\n        this.setState({\n            isOpen : true\n        })\n    }\n\n   \n    \n    handleClose = () => {\n        this.setState({\n            isOpen : false\n        })\n      };\n\n    handleTextFieldChange = (e) => {\n        this.setState({\n            email : e.target.value\n        })\n    }\n\n    sendMail = () =>{\n        const id = this.props.data._id;\n        const email = this.email.value;\n        this.props.dispatch(sendMailWithData(id,email));\n    }\n\n    renderDialog = (data) => (\n        data ? \n        <div>\n            <Dialog open={this.state.isOpen} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">Share Details</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                To share this details, please enter your email address here.\n                </DialogContentText>\n                <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"email\"\n                label=\"Email Address\"\n                type=\"email\"\n                fullWidth\n                inputRef={el => this.email = el} \n                value={this.state.email}\n                onChange={ (e) => this.handleTextFieldChange(e)} \n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n                </Button>\n                <Button onClick={this.sendMail} color=\"primary\">\n                Send\n                </Button>\n            </DialogActions>\n            </Dialog>\n      </div>\n        :null\n    )\n\n    renderTemplate = (data) => (\n        data ? \n        <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n                <Grid item xs={12} sm={8} md={8} lg={6}>\n                        <Card className='card'>\n                        <CardActionArea>\n                            <CardContent>\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                               { data.first_name + ' ' + data.last_name}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h5\">\n                               Designation: {data.designation}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h5\">\n                               Description: {data.description}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h5\">\n                              Age: {data.age}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h5\">\n                               Email: {data.email}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h5\">\n                               Mobile: {data.mobile}\n                            </Typography>\n                            \n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            <Button size=\"small\" color=\"primary\"\n                                onClick = { () => this.shareBtnClickHandler()}\n                            >\n                            Share\n                            </Button>\n                            <Link to='/users'>\n                                <Button size=\"small\" color=\"primary\">\n                                Back\n                                </Button>\n                            </Link>\n                        </CardActions>\n                        </Card>\n                </Grid>\n            </Grid>\n            : null\n    )\n\nrender(){\n    const data = this.props.data;\n    return (\n        <div>\n            {this.renderTemplate(data)}\n            {this.renderDialog(data)}\n        </div>\n       \n      );\n}\n \n}\n\n\n\nfunction mapStateToProps(state){\n    console.log(state)\n    return {\n        data: state.users.user,\n    }\n}\n\n\nexport default connect(mapStateToProps)(UserContainer);","import React from 'react';\n\nconst FourOFour = () => {\n    return(\n        <div>FourOFour</div>\n    )\n}\n\nexport default FourOFour;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Grid} from '@material-ui/core';\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { addUser , clearUser } from '../../actions'\n/*------- redux form --------*/\nimport { Field, reduxForm  } from 'redux-form';\n\nclass AddUser extends Component {\n/*\n    state = {\n        bookImage : null,\n        bookName : '',\n        imageUrl : '',\n        isSubmited : false,\n        bookData : null,\n        loader : false,\n        show : true\n    }\n*/\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n       //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderInputEmailField  --------*/\n    renderInputEmailField(field){\n        //    console.log(field)\n         const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n         return (\n             <div className={className}>\n                 <label>{field.myLabel}</label>\n                 <input type=\"email\" {...field.input}   onChange = {field.input.onChange}  />\n                 <div className=\"error\">\n                     {field.meta.touched? field.meta.error:''}\n                 </div>\n             </div>\n         )\n     }\n \n\n/*------- renderFileInputField  --------*/\nhandleFileChange = (event) => {\n    console.log(event.target.files[0]);\n    if (event.target.files && event.target.files[0]) {\n        this.setState({\n          imageUrl : URL.createObjectURL(event.target.files[0]),\n          show : true\n        });\n      }\n\n  //  console.log(this.state.bookImage)\n     if(event.target.file){\n        this.setState({\n            bookImage : event.target.files[0],\n            bookName : event.target.files[0].name\n        })\n     } \n    \n}\n\n\n\nrenderFileInputField = (field) => {\n    if(field.input.value){\n        console.log(field.input.value.length)\n    }\n    const fileInputKey = field.input.value ? this.state.bookName : +new Date();  // key = {fileInputKey}\n    console.log(fileInputKey)\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    //console.log(field.input.value);\n\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            key={fileInputKey}\n            type=\"file\"   \n            onChange = {field.input.onChange} \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\"  \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n\n\n\n  \n/*------- onSubmit() : runs on submit  --------*/\n    onSubmit(values){       \n          console.log(values)\n          this.props.dispatch(addUser(values));\n         this.setState({\n             isSubmited : true\n         })\n    }\n\n    componentWillUnmount() {\n        //console.log('component will unmount')\n\n        this.props.dispatch(clearUser())\n    }\n\n    componentWillMount(){\n        //console.log('component will mount')\n        this.props.dispatch(clearUser())\n    }\n\n    componentDidUpdate(){\n        //console.log('component did update')\n    }\n\n    componentWillUpdate(){\n        //console.log('component will update')\n    }\n\n    shouldComponentUpdate(){\n        //console.log('component should update')\n        return true\n    }\n    \n    componentWillReceiveProps(nextProps){\n        //console.log('component will reciveProps')\n\n      \n    }\n  \n    render(){\n\n       //console.log(this.props);\n\n        return(\n            <div>\n\n            <div className=\"top\">\n                <h3>Add New User</h3>\n                <Link to=\"/\">Back</Link>\n            </div>\n\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n                <Grid item xs={12} sm={8} md={8} lg={6}>\n                    <div className=\"Form\">                    \n                        <form onSubmit={this.props.handleSubmit((event)=>this.onSubmit(event))} method=\"POST\">\n\n                            <Field\n                                myLabel=\"Enter First Name\"\n                                name=\"first_name\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Last Name\"\n                                name=\"last_name\"\n                                component={this.renderInputField}\n                            />\n                            \n                            <Field\n                                myLabel=\"Enter Email\"\n                                name=\"email\"\n                                component={this.renderInputEmailField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Mobile\"\n                                name=\"mobile\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Designation\"\n                                name=\"designation\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter age\"\n                                name=\"age\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Description\"\n                                name=\"description\"\n                                component={this.renderTextareaField}\n                            />\n\n                        \n                            <button type=\"submit\">Submit</button>\n\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n            </div>          \n        )\n    }\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n   // console.log(values)\n    const errors = {};\n\n    if(!values.first_name){\n        errors.first_name = \"The first name is empty\"\n    }\n\n    if(!values.last_name){\n        errors.last_name = \"The last name is empty\"\n    }\n\n    if(!values.email){\n        errors.email = \"The email is empty\"\n    }\n\n    if(!values.mobile){\n        errors.mobile = \"The mobile is empty\"\n    }\n\n    if(!values.designation){\n        errors.designation = \"The designation is empty\"\n    }\n\n    if(!values.age){\n        errors.age = \"The age is empty\"\n    }\n\n    if(!values.description){\n        errors.description = \"The description is empty\"\n    }\n\n    return errors;\n}\n    /*------- it returns messages when action is called and state going to change  --------*/\n   \nfunction mapStateToProps(state){\n    //console.log(state)\n    \n    let user_value = {}\n    user_value =  {\n        first_name : '',\n        last_name : '',\n        email : '',\n        mobile : '',\n        description : '',\n        designation : '',\n        age : ''\n    }\n\n    return {\n        data: state.mail,\n        initialValues : user_value,\n    }\n}\n\n    /*------- reduxForm : connects redux-form with react form   --------*/\n\n export default connect( mapStateToProps, {addUser,clearUser})(\n    reduxForm({\n        validate,\n        form: 'addUserForm',\n        enableReinitialize : true,\n    })(AddUser)\n );","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Grid} from '@material-ui/core';\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { getUser , clearUser , updateUser , deleteUser } from '../../actions'\n/*------- redux form --------*/\nimport { Field, reduxForm  } from 'redux-form';\n\nclass Edit extends Component {\n/*\n    state = {\n        bookImage : null,\n        bookName : '',\n        imageUrl : '',\n        isSubmited : false,\n        bookData : null,\n        loader : false,\n        show : true\n    }\n    \n*/\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n       //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderInputEmailField  --------*/\n    renderInputEmailField(field){\n        //    console.log(field)\n         const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n         return (\n             <div className={className}>\n                 <label>{field.myLabel}</label>\n                 <input type=\"email\" {...field.input}   onChange = {field.input.onChange}  />\n                 <div className=\"error\">\n                     {field.meta.touched? field.meta.error:''}\n                 </div>\n             </div>\n         )\n     }\n \n\n/*------- renderFileInputField  --------*/\n/*handleFileChange = (event) => {\n  //  console.log(event.target.files[0]);\n    if (event.target.files && event.target.files[0]) {\n        this.setState({\n          imageUrl : URL.createObjectURL(event.target.files[0]),\n          show : true\n        });\n      }\n\n  //  console.log(this.state.bookImage)\n     if(event.target.file){\n        this.setState({\n            bookImage : event.target.files[0],\n            bookName : event.target.files[0].name\n        })\n     } \n    \n}\n\n\n\nrenderFileInputField = (field) => {\n    if(field.input.value){\n       // console.log(field.input.value.length)\n    }\n    const fileInputKey = field.input.value ? this.state.bookName : +new Date();  // key = {fileInputKey}\n   // console.log(fileInputKey)\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    //console.log(field.input.value);\n\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            key={fileInputKey}\n            type=\"file\"   \n            onChange = {field.input.onChange} \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n*/\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\"  \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        //console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n\n\n\n  \n/*------- onSubmit() : runs on submit  --------*/\n    onSubmit(values){       \n         // console.log(values)\n\n          this.props.dispatch(updateUser(values));\n      \n         \n    }\n\n    componentWillUnmount() {\n        //console.log('component will unmount')\n\n        this.props.dispatch(clearUser())\n    }\n\n    componentWillMount(){\n       // console.log('component will mount')\n      //  console.log(this.props.match.params.id)\n        this.props.dispatch(getUser(this.props.match.params.id))\n    }\n\n    componentDidUpdate(){\n      //  console.log('component did update')\n    }\n\n    componentWillUpdate(){\n     //  console.log('component will update')\n    }\n\n    shouldComponentUpdate(){\n       // console.log('component should update')\n        return true\n    }\n    \n    componentWillReceiveProps(nextProps){\n      //  console.log('component will reciveProps')\n    }\n  \n    render(){\n\n       //console.log(this.props);\n\n        return(\n            <div>\n\n            <div className=\"top\">\n                <h3>Edit User</h3>\n                <Link to=\"/users\">Back</Link>\n            </div>\n\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n                <Grid item xs={12} sm={8} md={8} lg={6}>\n                    <div className=\"Form\">                    \n                        <form onSubmit={this.props.handleSubmit((event)=>this.onSubmit(event))} method=\"POST\">\n\n                            <Field\n                                myLabel=\"Enter First Name\"\n                                name=\"first_name\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Last Name\"\n                                name=\"last_name\"\n                                component={this.renderInputField}\n                            />\n                            \n                            <Field\n                                myLabel=\"Enter Email\"\n                                name=\"email\"\n                                component={this.renderInputEmailField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Mobile\"\n                                name=\"mobile\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Designation\"\n                                name=\"designation\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter age\"\n                                name=\"age\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Description\"\n                                name=\"description\"\n                                component={this.renderTextareaField}\n                            />\n\n                        \n                            <button type=\"submit\">Submit</button>\n\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n            </div>          \n        )\n    }\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n   // console.log(values)\n    const errors = {};\n\n    if(!values.first_name){\n        errors.first_name = \"The first name is empty\"\n    }\n\n    if(!values.last_name){\n        errors.last_name = \"The last name is empty\"\n    }\n\n    if(!values.email){\n        errors.email = \"The email is empty\"\n    }\n\n    if(!values.mobile){\n        errors.mobile = \"The mobile is empty\"\n    }\n\n    if(!values.designation){\n        errors.designation = \"The designation is empty\"\n    }\n\n    if(!values.age){\n        errors.age = \"The age is empty\"\n    }\n\n    if(!values.description){\n        errors.description = \"The description is empty\"\n    }\n\n    return errors;\n}\n    /*------- it returns messages when action is called and state going to change  --------*/\n   \nfunction mapStateToProps(state){\n   // console.log(state)\n    \n    const users = state.users\n    let user_value = {}\n    const length = Object.entries(users).length;\n    if( length !== 0 && typeof(users.user) === \"object\" && users.user !== null ){\n        const user = state.users.user\n        user_value =  {\n            _id : user._id,\n            first_name : user.first_name,\n            last_name : user.last_name,\n            email : user.email,\n            mobile : user.mobile,\n            description : user.description,\n            designation : user.designation,\n            age : user.age\n        }\n    }\n    \n    return {\n        data: state.users,\n        initialValues : user_value,\n    }\n}\n\n    /*------- reduxForm : connects redux-form with react form   --------*/\n\n export default connect( mapStateToProps, {getUser , clearUser , updateUser , deleteUser})(\n    reduxForm({\n        validate,\n        form: 'editUserForm',\n        enableReinitialize : true,\n    })(Edit)\n );","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Grid} from '@material-ui/core';\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { loginAdmin } from '../../actions'\n/*------- redux form --------*/\nimport { Field, reduxForm  } from 'redux-form';\n\nclass Login extends Component {\n\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n       //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderInputEmailField  --------*/\n    renderInputEmailField(field){\n        //    console.log(field)\n         const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n         return (\n             <div className={className}>\n                 <label>{field.myLabel}</label>\n                 <input type=\"email\" {...field.input}   onChange = {field.input.onChange}  />\n                 <div className=\"error\">\n                     {field.meta.touched? field.meta.error:''}\n                 </div>\n             </div>\n         )\n     }\n\n\n    /*------- renderInputPasswordField  --------*/\n    renderInputPasswordField(field){\n        //    console.log(field)\n         const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n         return (\n             <div className={className}>\n                 <label>{field.myLabel}</label>\n                 <input type=\"password\" {...field.input}   onChange = {field.input.onChange}  />\n                 <div className=\"error\">\n                     {field.meta.touched? field.meta.error:''}\n                 </div>\n             </div>\n         )\n     }\n \n \n\n/*------- renderFileInputField  --------*/\nhandleFileChange = (event) => {\n    console.log(event.target.files[0]);\n    if (event.target.files && event.target.files[0]) {\n        this.setState({\n          imageUrl : URL.createObjectURL(event.target.files[0]),\n          show : true\n        });\n      }\n\n  //  console.log(this.state.bookImage)\n     if(event.target.file){\n        this.setState({\n            bookImage : event.target.files[0],\n            bookName : event.target.files[0].name\n        })\n     } \n    \n}\n\n\n\nrenderFileInputField = (field) => {\n    if(field.input.value){\n        console.log(field.input.value.length)\n    }\n    const fileInputKey = field.input.value ? this.state.bookName : +new Date();  // key = {fileInputKey}\n    console.log(fileInputKey)\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    //console.log(field.input.value);\n\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            key={fileInputKey}\n            type=\"file\"   \n            onChange = {field.input.onChange} \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\"  \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n/*------- onSubmit() : runs on submit  --------*/\n    onSubmit(values){       \n          console.log(values)\n          this.props.dispatch(loginAdmin(values.email,values.password));\n    }\n\n\n    \n    componentWillReceiveProps(nextProps){\n       console.log(nextProps.data);\n        if(nextProps.data){\n            if(nextProps.data.login.isAuth){\n                this.props.history.push('/')\n            }\n        }\n       \n    }\n  \n    render(){\n\n       //console.log(this.props);\n\n        return(\n            <div>\n\n            <div className=\"top\">\n                <h3>Login</h3>\n                <Link to=\"/\">Back</Link>\n            </div>\n\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n                <Grid item xs={12} sm={8} md={8} lg={6}>\n                    <div className=\"Form\">                    \n                        <form onSubmit={this.props.handleSubmit((event)=>this.onSubmit(event))} method=\"POST\">\n\n                            <Field\n                                myLabel=\"Enter Email\"\n                                name=\"email\"\n                                component={this.renderInputEmailField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Password\"\n                                name=\"password\"\n                                component={this.renderInputPasswordField}\n                            />\n\n                            <button type=\"submit\">Submit</button>\n\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n            </div>          \n        )\n    }\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n   // console.log(values)\n    const errors = {};\n\n    \n\n    if(!values.email){\n        errors.email = \"The email is empty\"\n    }\n\n    if(!values.password){\n        errors.password = \"The password is empty\"\n    }\n\n    return errors;\n}\n    /*------- it returns messages when action is called and state going to change  --------*/\n   \nfunction mapStateToProps(state){\n    console.log(state)\n    \n    let admin_value = {}\n    admin_value =  {\n        email : '',\n        password : ''\n    }\n\n    return {\n        data: state.users,\n        initialValues : admin_value,\n    }\n}\n\n    /*------- reduxForm : connects redux-form with react form   --------*/\n\n export default connect( mapStateToProps, {loginAdmin})(\n    reduxForm({\n        validate,\n        form: 'loginAdminForm',\n        enableReinitialize : true,\n    })(Login)\n );","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {Grid} from '@material-ui/core';\n/*------- connect react with redux --------*/\nimport { connect } from 'react-redux';\n\n/*------- action which all data to data base --------*/\nimport { signupAdmin , clearAdmin } from '../../actions'\n/*------- redux form --------*/\nimport { Field, reduxForm  } from 'redux-form';\n\nclass Signup extends Component {\n\n    //PRISTINE / DIRTY // TOUCHED / ERROR : events in redux-form \n\n/*------- renderInputField  --------*/\n    renderInputField(field){\n       //    console.log(field)\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return (\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input type=\"text\" {...field.input}   onChange = {field.input.onChange}  />\n                <div className=\"error\">\n                    {field.meta.touched? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderInputEmailField  --------*/\n    renderInputEmailField(field){\n        //    console.log(field)\n         const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n         return (\n             <div className={className}>\n                 <label>{field.myLabel}</label>\n                 <input type=\"email\" {...field.input}   onChange = {field.input.onChange}  />\n                 <div className=\"error\">\n                     {field.meta.touched? field.meta.error:''}\n                 </div>\n             </div>\n         )\n     }\n\n\n    /*------- renderInputPasswordField  --------*/\n    renderInputPasswordField(field){\n        //    console.log(field)\n         const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n         return (\n             <div className={className}>\n                 <label>{field.myLabel}</label>\n                 <input type=\"password\" {...field.input}   onChange = {field.input.onChange}  />\n                 <div className=\"error\">\n                     {field.meta.touched? field.meta.error:''}\n                 </div>\n             </div>\n         )\n     }\n \n \n\n/*------- renderFileInputField  --------*/\nhandleFileChange = (event) => {\n    console.log(event.target.files[0]);\n    if (event.target.files && event.target.files[0]) {\n        this.setState({\n          imageUrl : URL.createObjectURL(event.target.files[0]),\n          show : true\n        });\n      }\n\n  //  console.log(this.state.bookImage)\n     if(event.target.file){\n        this.setState({\n            bookImage : event.target.files[0],\n            bookName : event.target.files[0].name\n        })\n     } \n    \n}\n\n\n\nrenderFileInputField = (field) => {\n    if(field.input.value){\n        console.log(field.input.value.length)\n    }\n    const fileInputKey = field.input.value ? this.state.bookName : +new Date();  // key = {fileInputKey}\n    console.log(fileInputKey)\n    const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n    //console.log(field.input.value);\n\n    return (\n        <div className={className}>\n            <label>{field.myLabel}</label>\n            <input \n            key={fileInputKey}\n            type=\"file\"   \n            onChange = {field.input.onChange} \n            />\n            <div className=\"error\">\n                {field.meta.touched ? field.meta.error:''}\n            </div>\n        </div>\n    )\n}\n/*------- renderTextareaField  --------*/\n    renderTextareaField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <textarea \n                    {...field.input}\n                ></textarea>\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n    /*------- renderTextareaField  --------*/\n    renderNumberInputField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n                <input \n                type=\"number\"  \n                {...field.input}   \n                onChange = {field.input.onChange} \n                />\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n    \n\n    /*------- renderSelectField  --------*/\n\n    handleSelectChange = (event) => {\n        console.log(event.target.value)\n    }\n\n    renderSelectField(field){\n        const className = `form-input ${field.meta.touched && field.meta.error ? 'has-error':''}`;\n        return(\n            <div className={className}>\n                <label>{field.myLabel}</label>\n\n                \n               <select  {...field.input}   onChange = {field.input.onChange}  >\n                    {field.children}\n               </select>\n\n                 <div className=\"error\">\n                    {field.meta.touched ? field.meta.error:''}\n                </div>\n            </div>\n        )\n    }\n\n\n\n\n\n\n\n  \n/*------- onSubmit() : runs on submit  --------*/\n    onSubmit(values){       \n          console.log(values)\n          this.props.dispatch(signupAdmin(values));\n         this.setState({\n             isSubmited : true\n         })\n    }\n\n    componentWillUnmount() {\n        //console.log('component will unmount')\n\n       // this.props.dispatch(clearUser())\n    }\n\n    componentWillMount(){\n        //console.log('component will mount')\n       // this.props.dispatch(clearUser())\n    }\n\n    componentDidUpdate(){\n        //console.log('component did update')\n    }\n\n    componentWillUpdate(){\n        //console.log('component will update')\n    }\n\n    shouldComponentUpdate(){\n        //console.log('component should update')\n        return true\n    }\n    \n    componentWillReceiveProps(nextProps){\n        //console.log('component will reciveProps')\n\n      \n    }\n  \n    render(){\n\n       //console.log(this.props);\n\n        return(\n            <div>\n\n            <div className=\"top\">\n                <h3>Signup</h3>\n                <Link to=\"/\">Back</Link>\n            </div>\n\n            <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            >\n                <Grid item xs={12} sm={8} md={8} lg={6}>\n                    <div className=\"Form\">                    \n                        <form onSubmit={this.props.handleSubmit((event)=>this.onSubmit(event))} method=\"POST\">\n\n                            <Field\n                                myLabel=\"Enter First Name\"\n                                name=\"first_name\"\n                                component={this.renderInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Last Name\"\n                                name=\"last_name\"\n                                component={this.renderInputField}\n                            />\n                            \n                            <Field\n                                myLabel=\"Enter Email\"\n                                name=\"email\"\n                                component={this.renderInputEmailField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Mobile\"\n                                name=\"mobile\"\n                                component={this.renderNumberInputField}\n                            />\n\n                            <Field\n                                myLabel=\"Enter Password\"\n                                name=\"password\"\n                                component={this.renderInputPasswordField}\n                            />\n\n                            <button type=\"submit\">Submit</button>\n\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n            </div>          \n        )\n    }\n}\n/*------- validate() : validates our form  --------*/\n\n\nfunction validate(values){\n   // console.log(values)\n    const errors = {};\n\n    if(!values.first_name){\n        errors.first_name = \"The first name is empty\"\n    }\n\n    if(!values.last_name){\n        errors.last_name = \"The last name is empty\"\n    }\n\n    if(!values.email){\n        errors.email = \"The email is empty\"\n    }\n\n    if(!values.mobile){\n        errors.mobile = \"The mobile is empty\"\n    }\n\n    if(!values.password){\n        errors.password = \"The password is empty\"\n    }\n\n    return errors;\n}\n    /*------- it returns messages when action is called and state going to change  --------*/\n   \nfunction mapStateToProps(state){\n    console.log(state)\n    \n    let admin_value = {}\n    admin_value =  {\n        first_name : '',\n        last_name : '',\n        email : '',\n        mobile : '',\n        password : ''\n    }\n\n    return {\n        data: state.users,\n        initialValues : admin_value,\n    }\n}\n\n    /*------- reduxForm : connects redux-form with react form   --------*/\n\n export default connect( mapStateToProps, {signupAdmin,clearAdmin})(\n    reduxForm({\n        validate,\n        form: 'signupAdminForm',\n        enableReinitialize : true,\n    })(Signup)\n );","/**\n * auth.js : it handles user is authenticated or not\n * \n */\nimport React, { Component } from 'react';\nimport { auth } from '../../actions'\nimport { connect } from 'react-redux';\n\nexport default function(ComposedClass,reload){\n    class AuthenticationCheck extends Component{\n    \n        state = {\n            loading : true\n        }\n\n        componentWillMount () {\n            this.props.dispatch(auth())\n        }\n\n        componentWillReceiveProps (nextProps) {\n            this.setState({\n                loading : false\n            })\n\n            if(!nextProps.admin.login.isAuth){\n                if(reload){\n                    this.props.history.push('/login')\n                }\n            }\n        } \n    \n        render(){\n            if(this.state.loading){\n                return <div className=\"loader\"> Loading... </div>\n            }\n            return(\n               <ComposedClass {...this.props} users={this.props.users} />\n            )\n        }\n    }\n\n    function mapStateToProps(state){\n        console.log(state)\n        return{\n            admin: state.users\n        }\n    }\n    return connect(mapStateToProps)(AuthenticationCheck)\n}","   /**\n    * logout : component for logout\n    */\nimport React from 'react';\nimport axios from 'axios';\n\n\nconst Logout = (props) => {\n\n    let request = axios.get(`/api/logout`)\n                    .then(request => {\n                            setTimeout(() => {\n                               props.history.push('/') \n                            }, 2000);\n                    })\n    return (\n        <div className=\"logout_container\">\n            <h1>\n                Sorry to see you go :( \n            </h1> \n        </div>\n    );\n};\n\nexport default Logout;","   /**\n    * sidenavitems : items for side navbar\n    * \n    */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport FontAwesome from 'react-fontawesome';\nimport { connect } from 'react-redux';\n\n\nconst SideNavItems = ({admin,onHideNav}) => {\n\n    const items = [\n        {\n            type : 'navItem',\n            icon : 'home',\n            text : 'Home',\n            link : '/',\n            restricted : false\n        },\n        {\n            type : 'navItem',\n            icon : 'file-text-o',\n            text : 'Users',\n            link : '/users',\n            restricted : true\n        },\n        {\n            type : 'navItem',\n            icon : 'plus',\n            text : 'Add User',\n            link : '/users/add',\n            restricted : true\n        },\n        {\n            type : 'navItem',\n            icon : 'lock',\n            text : 'Login',\n            link : '/login',\n            excluded : true\n        },\n        {\n            type : 'navItem',\n            icon : 'plus',\n            text : 'Signup Admin',\n            link : '/signup',\n            restricted : true\n        },\n        {\n            type : 'navItem',\n            icon : 'lock',\n            text : 'Logout',\n            link : '/logout',\n            restricted : true\n        },\n\n    ]\n\n    const element = (item,i) => (\n        <div key={i} className={item.type} onClick={onHideNav}>\n            <Link to={item.link}>\n                    <FontAwesome name={item.icon} />\n                    {item.text}\n            </Link>\n        </div> \n    )\n    \n    \n    const showItems = () => (\n        admin.login ? \n        items.map((item,i)=>{\n            //console.log(!item.restricted)\n                if(admin.login.isAuth){\n                    return !item.excluded ?  element(item,i) : null \n                }else{\n                    return !item.restricted ? element(item,i) : null \n                }\n        }):\n        null\n    )\n\n    return (\n        <div>\n            {showItems()}\n        </div>\n    );\n};\n\nfunction mapStateToProps(state){\n    return{\n        admin : state.users\n    }\n}\n\nexport default connect(mapStateToProps)(SideNavItems);","/**\n * sidenav : side navbar\n * \n */\nimport React from 'react';\nimport SideNav from 'react-simple-sidenav';\nimport SideNavItems from '../SideNavItems/sidenavitems';\n\n\nconst Nav = (props) => {\n    return (\n      <SideNav\n        showNav = {props.showNav}\n        onHideNav = {props.onHideNav}\n        navStyle = {{\n            background : '#242424',\n            maxWidth : '220px'\n        }}\n      >\n          <SideNavItems onHideNav = {props.onHideNav} /> \n      </SideNav>\n    );\n};\n\nexport default Nav;","   /**\n    * Header.js : header component\n    *  \n    */\n   import React, { Component } from 'react'\n   import FontAwesome from 'react-fontawesome';\n   import  { Link } from 'react-router-dom';\n   import Nav from '../Sidenav/sidenav';\n   \n   class Header extends Component {\n   \n       state = {\n           showNav : false\n       }\n   \n       onHideNav = () =>{\n           this.setState({\n               showNav : false\n           })\n       }\n   \n       render() {\n           return (\n               <header>\n                   <div className=\"open_nav\">\n   \n                       <FontAwesome name=\"bars\"\n                          onClick= {()=>this.setState({showNav : true})}\n                           style={{\n                               color : '#ffffff',\n                               padding : '10px',\n                               cursor : 'pointer'\n                           }}\n                       />\n                  </div>\n                  <Nav\n                       showNav = {this.state.showNav}\n                       onHideNav = {()=> this.onHideNav()}\n                  />\n                           <Link to='/' className='logo'>\n                                Mail Sender\n                            </Link>\n                 \n               </header>\n            )\n       }\n   }\n   \n   export default  Header;\n           ","/**\n * layout.js : Main layout component\n * \n */\nimport React from 'react';\nimport Header from '../.././components/Header/header';\n\n\nconst Layout = (props) => {\n    return (\n\n        <div>\n            <Header/>\n            <div>\n                 {props.children}\n            </div>\n        </div>\n    );\n};\n\nexport default Layout;","import React from 'react';\nimport  { Switch , Route  } from 'react-router-dom';\nimport Home from './components/Home/home';\nimport Users from './components/UsersView/users';\nimport User from  './components/UserView/user';\nimport FourOFour from  './components/FourOFour/fourofour';\nimport AddUser from './containers/Admin/add';\nimport EditUser from './containers/Admin/edit';\nimport UserContainer from './containers/User/user_container.js';\nimport Login from './containers/Login/login';\nimport Signup from './containers/Signup/signup';\nimport Auth from './hoc/Auth/auth';\nimport Logout from './components/Logout/logout';\n\n\nimport Layout from './hoc/Layout/layout';\n\n\nconst Routes = () => {\n    return (\n        <Layout>\n            <Switch> \n                <Route path=\"/signup\" exact  component={ Auth(Signup,true) } />\n                <Route path=\"/logout\" exact  component={ Auth(Logout,true) } />\n                <Route path=\"/login\" exact  component={ Auth(Login,false) } />\n                <Route path=\"/users/add\" exact  component={ Auth(AddUser,false) } /> \n                <Route path=\"/users/:id/edit\" exact  component={ Auth(EditUser,true) } />          \n                <Route path=\"/users/:id\" exact component={ Auth(UserContainer,true) } />\n                <Route path=\"/users\" exact component={ Auth(Users,false) } />\n                <Route path=\"/\" exact  component={ Auth(Home,null) } />\n                <Route component={FourOFour}/>     \n            </Switch>\n        </Layout>\n       \n    );\n};\n\nexport default Routes;","/**\n * \n * users_reducer : which containe all reducers related to users\n *  \n */\nexport default function(state={},action){\n    switch(action.type){\n        case 'ADD_USER_START':\n            return { ...state,user:action.payload }\n        case 'ADD_USER_SUCCESS':\n            return { ...state,user:action.payload }\n        case 'ADD_USER_ERROR':\n            return { ...state,user:action.payload }   \n        case 'CLEAR_USER':\n            return { ...state,user:action.payload }   \n        case 'GET_USER':\n            return { ...state,user:action.payload }  \n        case 'GET_USERS':\n            return { ...state,users:action.payload }  \n        case 'UPDATE_USER_START':\n            return { ...state,user:action.payload }\n        case 'UPDATE_USER_SUCCESS':\n            return { ...state,user:action.payload }\n        case 'UPDATE_USER_ERROR':\n            return { ...state,user:action.payload }   \n        case 'UPDATE_USER':\n            return { ...state,user:action.payload.doc }   \n        case 'DELETE_USER':\n            return { ...state,user:action.payload }  \n        case 'ADD_ADMIN_START':\n            return { ...state,admin:action.payload }\n        case 'ADD_ADMIN_SUCCESS':\n            return { ...state,admin:action.payload }\n        case 'ADD_ADMIN_ERROR':\n            return { ...state,admin:action.payload }   \n        case 'CLEAR_ADMIN':\n            return { ...state,admin:action.payload }   \n        case 'ADMIN_LOGIN':\n            return { ...state,login:action.payload }\n        case 'ADMIN_AUTH':\n            return { ...state,login:action.payload }  \n        default:\n            return state;\n    }\n}","/**\n * rootReducer : combine all reducers\n * \n */\nimport { combineReducers } from 'redux';\nimport mail from './mail_reducer';\nimport users from './users_reducer';\n\nimport { reducer as formReducer } from 'redux-form';\n\nconst rootReducer = combineReducers({\n  mail,\n  users,\n  form : formReducer\n});\n\nexport default rootReducer;","/**\n * \n * mail_reducer : which containe all reducers related to mail\n *  \n */\nexport default function(state={},action){\n    switch(action.type){\n        case 'SEND_MAIL':\n            return { ...state,mail:action.payload }\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport  { createStore , applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport Routes from './routes';\nimport reducers from './reducers';\n\n\nconst createStoreWithMiddleware =  applyMiddleware(promiseMiddleware,ReduxThunk)(createStore);\n\nReactDOM.render( \n    <Provider store={createStoreWithMiddleware( reducers )}>\n        <BrowserRouter>\n            <Routes />\n        </BrowserRouter>\n    </Provider>\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}